{
    "Name": "Spell Check String",
    "Description": "The Spell Check String action will check the spelling of an input string.  It will output the percent accurate, total words, amount of misspelled words, list of each misspelled word and the correction, and a corrected version of the input string.",
    "Script": "from SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import unix_now, convert_unixtime_to_datetime, output_handler\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_FAILED,EXECUTION_STATE_TIMEDOUT\nfrom spellchecker import SpellChecker\nimport re\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    status = EXECUTION_STATE_COMPLETED  # used to flag back to siemplify system, the action final status\n    output_message = \"output message :\"  # human readable message, showed in UI as the action result\n    result_value = None  # Set a simple result value, used for playbook if\\else and placeholders.\n    json_result = {}\n    spell = SpellChecker()\n    \n    input_string = siemplify.extract_action_param(\"String\", print_value=True)\n    json_result['input_string'] = input_string\n    string_no_punctuation = re.sub(\"[^\\w\\s]\", \"\", input_string)\n    input_words = string_no_punctuation.split()\n    json_result['total_words'] = len(input_words)\n    \n    misspelled = spell.unknown(input_words)\n    json_result['total_misspelled_words'] = 0\n    corrected = input_string\n    json_result['misspelled_words'] = []\n    for word in misspelled:\n        correct = {}\n        correct['misspelled_word'] = word\n        correct['correction'] =spell.correction(word)\n        if correct['misspelled_word'] !=  correct['correction']:\n            json_result['total_misspelled_words'] += 1\n            json_result['misspelled_words'].append(correct)\n            corrected = re.sub(rf\"\\b{word}\\b\", correct['correction'], corrected)\n    json_result['accuracy'] = int((len(input_words) - json_result['total_misspelled_words']) / len(input_words)* 100)\n    json_result['corrected_string'] = corrected\n    result_value = json_result['accuracy']\n    siemplify.result.add_result_json(json_result)\n    output_message = f\"The input string is {json_result['accuracy']}% accurate\"\n    siemplify.LOGGER.info(\"\\n  status: {}\\n  result_value: {}\\n  output_message: {}\".format(status,result_value, output_message))\n    siemplify.end(output_message, result_value , status)\n\n\nif __name__ == \"__main__\":\n    main()\n",
    "IntegrationIdentifier": "Tools",
    "ScriptResultName": "accuracy_percent",
    "DynamicResultsMetadata": [
        {
            "ResultName": "JsonResult",
            "ResultExample": "{\n  \"input_string\": \"STRING\",\n  \"total_words\": 112,\n  \"total_misspelled_words\": 5,\n  \"misspelled_words\": [\n    {\n      \"misspelled_word\": \"worda\",\n      \"correction\": \"word\"\n    },\n    {\n      \"misspelled_word\": \"wordb\",\n      \"correction\": \"word\"\n    }\n  ],\n  \"accuracy\": 95,\n  \"corrected_string\": \"CORRECTED STRING\"\n}",
            "ShowResult": true
        }
    ],
    "Creator": "Rob",
    "IsEnabled": true,
    "IsCustom": false,
    "IsSystem": false,
    "Version": 10.0,
    "TimeoutSeconds": 300,
    "IsAsync": false,
    "AsyncPollingIntervalInSeconds": 30,
    "TotalIntervalTimeoutForAsyncInSeconds": 86400,
    "Parameters": [
        {
            "CustomActionId": 0,
            "IsMandatory": true,
            "DefaultValue": "",
            "Description": "The string that will be checked for spelling errors. ",
            "Name": "String",
            "Value": "",
            "Type": 0,
            "OptionalValues": null,
            "OptionalValuesJson": null
        }
    ],
    "DefaultResultValue": "",
    "PythonVersion": "None",
    "SimulationData": {
        "Entities": null
    },
    "SimulationDataJson": null
}