{
  "Name": "Check Entities Fields In Text",
  "Description": "This actions allows to search for a specific field from each entity in the scope (or multiple fields using regex) and compare it with one or more values. The compared values can also go through regex. A match is found if one of the post regex values from the entity enrichment is in one or more values searched in.",
  "Script": "from SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import output_handler, convert_dict_to_json_result_dict\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_FAILED\n\nimport re\nimport json\nimport copy\n\ndef get_entity_object_by_identifier(siemplify, identifier):\n    for entity in siemplify.target_entities:\n        if identifier.lower() == entity.identifier.lower():\n            return entity\n    return None\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    \n    try:\n        status = EXECUTION_STATE_COMPLETED  \n        output_message = \"output message :\" \n        result_value = False \n        failed_entities = [] \n        successfull_entities = [] \n        json_result = {}\n        \n        fields_json = json.loads(siemplify.parameters.get(\"FieldsInput\"))\n        search_data_json = json.loads(siemplify.parameters.get(\"SearchInData\"))\n        enrich_key = siemplify.parameters.get(\"ShouldEnrichEntity\", \"\")\n        is_case_sensitive = siemplify.parameters.get(\"IsCaseSensitive\").lower() == \"true\"\n        \n        \n        for entity in siemplify.target_entities:\n            try:\n                entity_fields_json = copy.deepcopy(fields_json)\n                for item in entity_fields_json:\n                    item_results = []\n                    # for event in siemplify.current_alert.security_events:\n                    if item.get(\"RegexForFieldName\"):\n                        for key in entity.additional_properties.keys():\n                            if re.search(item.get(\"RegexForFieldName\"), key):\n                                item_results.append({\"key\": key, \"val\": entity.additional_properties.get(key)})\n                    else:\n                        item_results.append({\"key\": item[\"FieldName\"], \"val\": entity.additional_properties.get(item[\"FieldName\"])})\n                        \n                    item_results = [x for x in item_results if x[\"val\"]]\n                    \n                    if item.get(\"RegexForFieldValue\"):\n                        values_post_regex = []\n                        for val in item_results:\n                            post_regex_val = re.findall(item.get(\"RegexForFieldValue\"), val[\"val\"])\n                            if isinstance(post_regex_val, list):\n                                values_post_regex.append([{\"key\": item[\"FieldName\"], \"val\": x} for x in post_regex_val])\n                            else:\n                                values_post_regex.append([{\"key\": item[\"FieldName\"], \"val\": post_regex_val}])\n                            # values_post_regex.append(post_regex_val)\n                        item[\"ResultsToSearch\"] = {\"val_to_search\": values_post_regex}\n                        # print(values_post_regex)\n                    else:\n                        item[\"ResultsToSearch\"] = {\"val_to_search\": [item_results]}\n                    item[\"ResultsToSearch\"][\"found_results\"] = []\n                    item[\"ResultsToSearch\"][\"num_of_results\"] = 0\n                    \n                    \n                    # Prepare values to search in:\n                    regex_for_search_field = item.get(\"RegEx\")\n                    if not regex_for_search_field:\n                        regex_for_search_field = \".*\"\n                    for item in search_data_json:\n                        search_string = re.findall(regex_for_search_field, item[\"Data\"])\n                        if isinstance(search_string, list):\n                            item[\"search_string\"] = \" \".join(search_string)\n                        else:\n                            item[\"search_string\"] = search_string\n                json_result[entity.identifier] = entity_fields_json\n            except Exception as e:\n                failed_entities.append(entity.identifier)\n                raise\n\n        # # Prepare values to search in:\n        # regex_for_search_field = item.get(\"RegEx\")\n        # if not regex_for_search_field:\n        #     regex_for_search_field = \".*\"\n        # for item in search_data_json:\n        #     search_string = re.findall(regex_for_search_field, item[\"Data\"])\n        #     if isinstance(search_string, list):\n        #         item[\"search_string\"] = \" \".join(search_string)\n        #     else:\n        #         item[\"search_string\"] = search_string\n\n        # Find matches!!\n        for entity_id, entity_data in json_result.items():\n            for item in entity_data:\n                for vals in item.get(\"ResultsToSearch\", []).get(\"val_to_search\", []):\n                    for search_in_item in search_data_json:\n                        for val in vals:\n                            if (is_case_sensitive and val[\"val\"] in search_in_item.get(\"search_string\")) or \\\n                                (not is_case_sensitive and val[\"val\"].lower() in search_in_item.get(\"search_string\").lower()):\n                                item.get(\"ResultsToSearch\", [])[\"found_results\"].append({\"to_search\": val, \n                                                            \"searched_in\": search_in_item.get(\"search_string\")})\n                                item.get(\"ResultsToSearch\", [])[\"num_of_results\"] = 1 + item.get(\"ResultsToSearch\", [])[\"num_of_results\"]\n                                \n                                ent = get_entity_object_by_identifier(siemplify, entity_id)\n                                successfull_entities.append(ent)\n                                if enrich_key:\n                                    ent.additional_properties[enrich_key] = True\n                            else:\n                                pass\n\n        if enrich_key:\n            siemplify.update_entities(successfull_entities)\n\n        if json_result:\n            siemplify.result.add_result_json(convert_dict_to_json_result_dict(json_result))\n\n        if successfull_entities:\n            unique_entity_identifiers = list(set([x.identifier for x in successfull_entities]))\n            output_message += \"\\n Successfully processed entities:\\n   {}\".format(\"\\n   \".join(unique_entity_identifiers))\n        else:\n            output_message += \"\\n No entities where processed.\"\n\n        result_value = len(successfull_entities)\n\n        if failed_entities:\n            output_message += \"\\n Failed processing entities:\\n   {}\".format(\"\\n   \".join(failed_entities))\n            status = EXECUTION_STATE_FAILED\n\n    except Exception as e:\n        raise\n        raise Exception(item)\n        status = EXECUTION_STATE_FAILED\n        result_value = \"Failed\"\n        output_message += \"\\n {}\".format(e)\n\n\n    siemplify.end(output_message, result_value, status)\n\n\nif __name__ == \"__main__\":\n    main()\n",
  "IntegrationIdentifier": "Tools",
  "ScriptResultName": "ScriptResult",
  "DynamicResultsMetadata": [
    {
      "ResultName": "JsonResult",
      "ResultExample": "[\n  {\n    \"Entity\": \"F.ATTACKER4@GMAIL.COM\",\n    \"EntityResult\": [\n      {\n        \"RegexForFieldName\": \".*\",\n        \"FieldName\": \"\",\n        \"RegexForFieldValue\": \"\",\n        \"ResultsToSearch\": {\n          \"val_to_search\": [\n            [\n              {\n                \"key\": \"Type\",\n                \"val\": \"USERUNIQNAME\"\n              },\n              {\n                \"key\": \"Identifier\",\n                \"val\": \"F.ATTACKER4@GMAIL.COM\"\n              },\n              {\n                \"key\": \"Environment\",\n                \"val\": \"Default Environment\"\n              },\n              {\n                \"key\": \"OriginalIdentifier\",\n                \"val\": \"f.attacker4@gmail.com\"\n              },\n              {\n                \"key\": \"OrigIdentifier\",\n                \"val\": \"f.attacker4@gmail.com\"\n              },\n              {\n                \"key\": \"IsFromLdapString\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsInternalAsset\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsSuspicious\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsEnriched\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsVulnerable\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsArtifact\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsTestCase\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"domain_mathed\",\n                \"val\": \"true\"\n              },\n              {\n                \"key\": \"domain_matched\",\n                \"val\": \"true\"\n              }\n            ]\n          ],\n          \"found_results\": [\n            {\n              \"to_search\": {\n                \"key\": \"domain_mathed\",\n                \"val\": \"true\"\n              },\n              \"searched_in\": \"true \"\n            },\n            {\n              \"to_search\": {\n                \"key\": \"domain_matched\",\n                \"val\": \"true\"\n              },\n              \"searched_in\": \"true \"\n            }\n          ],\n          \"num_of_results\": 2\n        }\n      }\n    ]\n  },\n  {\n    \"Entity\": \"VICKIE.B@SIEMPLIFY.CO\",\n    \"EntityResult\": [\n      {\n        \"RegexForFieldName\": \".*\",\n        \"FieldName\": \"\",\n        \"RegexForFieldValue\": \"\",\n        \"ResultsToSearch\": {\n          \"val_to_search\": [\n            [\n              {\n                \"key\": \"Type\",\n                \"val\": \"USERUNIQNAME\"\n              },\n              {\n                \"key\": \"Identifier\",\n                \"val\": \"VICKIE.B@SIEMPLIFY.CO\"\n              },\n              {\n                \"key\": \"Environment\",\n                \"val\": \"Default Environment\"\n              },\n              {\n                \"key\": \"OriginalIdentifier\",\n                \"val\": \"vickie.b@siemplify.co\"\n              },\n              {\n                \"key\": \"OrigIdentifier\",\n                \"val\": \"vickie.b@siemplify.co\"\n              },\n              {\n                \"key\": \"IsFromLdapString\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsInternalAsset\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsSuspicious\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsEnriched\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsVulnerable\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsArtifact\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsTestCase\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"domain_mathed\",\n                \"val\": \"true\"\n              },\n              {\n                \"key\": \"domain_matched\",\n                \"val\": \"true\"\n              }\n            ]\n          ],\n          \"found_results\": [\n            {\n              \"to_search\": {\n                \"key\": \"domain_mathed\",\n                \"val\": \"true\"\n              },\n              \"searched_in\": \"true \"\n            },\n            {\n              \"to_search\": {\n                \"key\": \"domain_matched\",\n                \"val\": \"true\"\n              },\n              \"searched_in\": \"true \"\n            }\n          ],\n          \"num_of_results\": 2\n        }\n      }\n    ]\n  },\n  {\n    \"Entity\": \"HTTP://MARKOSSOLOMON.COM/F1Q7QX.PHP\",\n    \"EntityResult\": [\n      {\n        \"RegexForFieldName\": \".*\",\n        \"FieldName\": \"\",\n        \"RegexForFieldValue\": \"\",\n        \"ResultsToSearch\": {\n          \"val_to_search\": [\n            [\n              {\n                \"key\": \"Type\",\n                \"val\": \"DestinationURL\"\n              },\n              {\n                \"key\": \"Identifier\",\n                \"val\": \"HTTP://MARKOSSOLOMON.COM/F1Q7QX.PHP\"\n              },\n              {\n                \"key\": \"Environment\",\n                \"val\": \"Default Environment\"\n              },\n              {\n                \"key\": \"OriginalIdentifier\",\n                \"val\": \"http://markossolomon.com/F1q7QX.php\"\n              },\n              {\n                \"key\": \"IsInternalAsset\",\n                \"val\": \"True\"\n              },\n              {\n                \"key\": \"IsSuspicious\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsEnriched\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsVulnerable\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsArtifact\",\n                \"val\": \"True\"\n              },\n              {\n                \"key\": \"IsTestCase\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"domain_mathed\",\n                \"val\": \"true\"\n              },\n              {\n                \"key\": \"domain_matched\",\n                \"val\": \"true\"\n              }\n            ]\n          ],\n          \"found_results\": [\n            {\n              \"to_search\": {\n                \"key\": \"domain_mathed\",\n                \"val\": \"true\"\n              },\n              \"searched_in\": \"true \"\n            },\n            {\n              \"to_search\": {\n                \"key\": \"domain_matched\",\n                \"val\": \"true\"\n              },\n              \"searched_in\": \"true \"\n            }\n          ],\n          \"num_of_results\": 2\n        }\n      }\n    ]\n  },\n  {\n    \"Entity\": \"YOUR NEW SALARY NOTIFICATION\",\n    \"EntityResult\": [\n      {\n        \"RegexForFieldName\": \".*\",\n        \"FieldName\": \"\",\n        \"RegexForFieldValue\": \"\",\n        \"ResultsToSearch\": {\n          \"val_to_search\": [\n            [\n              {\n                \"key\": \"Type\",\n                \"val\": \"EMAILSUBJECT\"\n              },\n              {\n                \"key\": \"Identifier\",\n                \"val\": \"YOUR NEW SALARY NOTIFICATION\"\n              },\n              {\n                \"key\": \"Environment\",\n                \"val\": \"Default Environment\"\n              },\n              {\n                \"key\": \"IsInternalAsset\",\n                \"val\": \"True\"\n              },\n              {\n                \"key\": \"IsSuspicious\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsEnriched\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsVulnerable\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"IsArtifact\",\n                \"val\": \"True\"\n              },\n              {\n                \"key\": \"IsTestCase\",\n                \"val\": \"False\"\n              },\n              {\n                \"key\": \"domain_mathed\",\n                \"val\": \"true\"\n              },\n              {\n                \"key\": \"domain_matched\",\n                \"val\": \"true\"\n              }\n            ]\n          ],\n          \"found_results\": [\n            {\n              \"to_search\": {\n                \"key\": \"domain_mathed\",\n                \"val\": \"true\"\n              },\n              \"searched_in\": \"true \"\n            },\n            {\n              \"to_search\": {\n                \"key\": \"domain_matched\",\n                \"val\": \"true\"\n              },\n              \"searched_in\": \"true \"\n            }\n          ],\n          \"num_of_results\": 2\n        }\n      }\n    ]\n  }\n]",
      "ShowResult": true
    }
  ],
  "Creator": "Robert",
  "IsEnabled": true,
  "IsCustom": false,
  "IsSystem": false,
  "Version": 4.0,
  "TimeoutSeconds": 300,
  "Parameters": [
    {
      "CustomActionId": 0,
      "IsMandatory": true,
      "DefaultValue": "[     {         \"Data\": \"[Event.from]\",         \"RegEx\": \"(?<=@)[^.]+(?=\\\\.)\"     } ]",
      "Description": "A JSON that represents the string(s) you want to search in\n[{\n \"Data\": \"\",\n \"RegEx\": \"\"\n}]",
      "Name": "SearchInData",
      "Value": "[     {         \"Data\": \"[Event.from]\",         \"RegEx\": \"(?<=@)[^.]+(?=\\\\.)\"     } ]",
      "Type": 0,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1614012620362,
      "ModificationTimeUnixTimeInMs": 1614012620362
    },
    {
      "CustomActionId": 0,
      "IsMandatory": true,
      "DefaultValue": "[     {         \"RegexForFieldName\": \"\",         \"FieldName\": \"body\",         \"RegexForFieldValue\": \"\"     },     {         \"RegexForFieldName\": \".*(_url_).*\",         \"FieldName\": \"\",         \"RegexForFieldValue\": \"\"     },     {         \"RegexForFieldName\": \"\",         \"FieldName\": \"body\",         \"RegexForFieldValue\": \"HostName: (.*?)\"     } ]",
      "Description": "A JSON that describes what fields should be tested for\n[{\n \"RegexForFieldName\": \"\",\n \"FieldName\": \"Field name to search\",\n \"RegexForFieldValue\": \"\"\n}]",
      "Name": "FieldsInput",
      "Value": "[     {         \"RegexForFieldName\": \"\",         \"FieldName\": \"body\",         \"RegexForFieldValue\": \"\"     },     {         \"RegexForFieldName\": \".*(_url_).*\",         \"FieldName\": \"\",         \"RegexForFieldValue\": \"\"     },     {         \"RegexForFieldName\": \"\",         \"FieldName\": \"body\",         \"RegexForFieldValue\": \"HostName: (.*?)\"     } ]",
      "Type": 0,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1614012620362,
      "ModificationTimeUnixTimeInMs": 1614012620362
    },
    {
      "CustomActionId": 0,
      "IsMandatory": false,
      "DefaultValue": "domain_matched",
      "Description": "If set to \"<VAL>\" will also put an enrichment value on the entity to be recognized as \"matched\" with the value. The key will be \"<VAL>\"",
      "Name": "ShouldEnrichEntity",
      "Value": "domain_matched",
      "Type": 0,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1614012620362,
      "ModificationTimeUnixTimeInMs": 1614012620362
    },
    {
      "CustomActionId": 0,
      "IsMandatory": false,
      "DefaultValue": "false",
      "Description": "Is the field case sensitive ",
      "Name": "IsCaseSensitive",
      "Value": "false",
      "Type": 1,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1614012620362,
      "ModificationTimeUnixTimeInMs": 1614012620362
    }
  ],
  "DefaultResultValue": "",
  "PythonVersion": "None",
  "Id": 0,
  "CreationTimeUnixTimeInMs": 1614012620354,
  "ModificationTimeUnixTimeInMs": 1614012620354
}