{"Name":"Ping","Description":"Test connectivity with the Philips HUE Bridge.","Script":"from PhilipsManager import PhilipsManager\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import unix_now, convert_unixtime_to_datetime, output_handler\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_FAILED, EXECUTION_STATE_TIMEDOUT\nimport json, requests\n\n# Consts:\nINTEGRATION_NAME = \"PhilipsHUE\"\nSCRIPT_NAME = \"Ping\"\n\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = SCRIPT_NAME\n    siemplify.LOGGER.info(\"================= Main - Param Init =================\")\n\n    # Extract intgration params:\n    bridge_ip = siemplify.extract_configuration_param(INTEGRATION_NAME, \"Bridge IP\")\n    user_name = siemplify.extract_configuration_param(INTEGRATION_NAME, \"Authorized Username\")\n\n    # Create manager for methods:\n    philips_manager = PhilipsManager(bridge_ip, user_name)\n    # Init result values:\n    status = EXECUTION_STATE_FAILED\n    output_message = \"The connection failed.\"\n    return_value = False\n\n    try:\n        connection_successful = philips_manager.test_connectivity()\n        return_value = connection_successful\n        output_message = f'Connected successfully to <{bridge_ip}>'\n\n    except:\n        siemplify.LOGGER.error(e)\n        output_message += \" Error: \" + str(e)\n\n    finally:\n        siemplify.LOGGER.info(\"----------------- Main - Finished -----------------\")\n        siemplify.LOGGER.info(\n            \"status: {}\\nresult_value: {}\\noutput_message: {}\".format(status, return_value, output_message))\n        siemplify.end(output_message, return_value, status)\n\n\nif __name__ == \"__main__\":\n    main()\n","IntegrationIdentifier":"PhilipsHUE","ScriptResultName":"ScriptResult","DynamicResultsMetadata":[{"ResultName":"JsonResult","ResultExample":"{}","ShowResult":true}],"Creator":"Admin","IsEnabled":false,"IsCustom":false,"IsSystem":false,"Version":21.0,"TimeoutSeconds":300,"IsAsync":null,"AsyncPollingIntervalInSeconds":3600,"TotalIntervalTimeoutForAsyncInSeconds":86400,"Parameters":[],"DefaultResultValue":"","PythonVersion":"None","SimulationData":{"Entities":null},"SimulationDataJson":null}
