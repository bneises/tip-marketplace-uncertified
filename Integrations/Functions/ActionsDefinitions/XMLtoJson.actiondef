{
    "Name": "XMLtoJson",
    "Description": "Convert XML formatted data to JSON.",
    "Script": "from SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import unix_now, convert_unixtime_to_datetime, output_handler\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_FAILED,EXECUTION_STATE_TIMEDOUT\nimport xmltodict, json\n\n\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n\n    xml_input = siemplify.extract_action_param(\"xml\", print_value=True)\n\n    status = EXECUTION_STATE_COMPLETED  # used to flag back to siemplify system, the action final status\n    output_message = \"output message :\"  # human readable message, showed in UI as the action result\n    result_value = True  # Set a simple result value, used for playbook if\\else and placeholders.\n\n    try:\n        json_result = xmltodict.parse(xml_input)\n        siemplify.result.add_result_json(json_result)\n    except Exception as e:\n        status = EXECUTION_STATE_FAILED\n        output_message = f\"Error: {e}\"\n        result_value = False\n\n    siemplify.LOGGER.info(\"\\n  status: {}\\n  result_value: {}\\n  output_message: {}\".format(status,result_value, output_message))\n    siemplify.end(output_message, result_value, status)\n\n\nif __name__ == \"__main__\":\n    main()\n",
    "IntegrationIdentifier": "Functions",
    "ScriptResultName": "ScriptResult",
    "DynamicResultsMetadata": [
        {
            "ResultName": "JsonResult",
            "ResultExample": "{}",
            "ShowResult": true
        }
    ],
    "Creator": "Rob",
    "IsEnabled": true,
    "IsCustom": false,
    "IsSystem": false,
    "Version": 12.0,
    "TimeoutSeconds": 600,
    "IsAsync": false,
    "AsyncPollingIntervalInSeconds": 3600,
    "TotalIntervalTimeoutForAsyncInSeconds": 86400,
    "Parameters": [
        {
            "CustomActionId": 0,
            "IsMandatory": true,
            "DefaultValue": "<e> <a>text</a> <a>text</a> </e>",
            "Description": "Convert XML to JSON",
            "Name": "xml",
            "Value": "<e> <a>text</a> <a>text</a> </e>",
            "Type": 0,
            "OptionalValues": null,
            "OptionalValuesJson": null
        }
    ],
    "DefaultResultValue": "",
    "PythonVersion": "None",
    "SimulationData": {
        "Entities": null
    },
    "SimulationDataJson": null
}
