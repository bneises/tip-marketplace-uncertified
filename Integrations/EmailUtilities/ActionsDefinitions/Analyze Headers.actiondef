{
   "Name":"Analyze Headers",
   "Description":"Analyze Headers accepts a JSON object containing a list of Email headers.  The action will validate the SPF, DMARC, ARC, and DKIM records in the email.  It will also check to see if any of the relay servers are blacklisted by querying multiple RBLs and enrich them with geo-location and IP whois information.",
   "Script":"from SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import unix_now, convert_unixtime_to_datetime, output_handler\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_FAILED, EXECUTION_STATE_TIMEDOUT\nimport tldextract\nimport EmailParserRouting\nimport EmailUtilitiesManager\nimport json\nimport re\nimport checkdmarc\nimport datetime\nfrom dateutil.parser import parse\nfrom dateutil.tz import gettz\nimport ipaddress\nimport socket\nimport binascii\nimport pydnsbl\nimport dns.resolver\nfrom ipwhois import IPWhois\nfrom ip2geotools.databases.noncommercial import DbIpCity\n\n\ndef ip_in_subnetwork(ip_address, subnetwork):\n    \"\"\"\n    Returns True if the given IP address belongs to the\n    subnetwork expressed in CIDR notation, otherwise False.\n    Both parameters are strings.\n\n    Both IPv4 addresses/subnetworks (e.g. \"192.168.1.1\"\n    and \"192.168.1.0/24\") and IPv6 addresses/subnetworks (e.g.\n    \"2a02:a448:ddb0::\" and \"2a02:a448:ddb0::/44\") are accepted.\n    \"\"\"\n\n    (ip_integer, version1) = ip_to_integer(ip_address)\n    (ip_lower, ip_upper, version2) = subnetwork_to_ip_range(subnetwork)\n\n    if version1 != version2:\n        raise ValueError(\"incompatible IP versions\")\n\n    return (ip_lower <= ip_integer <= ip_upper)\n\n\ndef ip_to_integer(ip_address):\n    \"\"\"\n    Converts an IP address expressed as a string to its\n    representation as an integer value and returns a tuple\n    (ip_integer, version), with version being the IP version\n    (either 4 or 6).\n\n    Both IPv4 addresses (e.g. \"192.168.1.1\") and IPv6 addresses\n    (e.g. \"2a02:a448:ddb0::\") are accepted.\n    \"\"\"\n\n    # try parsing the IP address first as IPv4, then as IPv6\n    for version in (socket.AF_INET, socket.AF_INET6):\n\n        try:\n            ip_hex = socket.inet_pton(version, ip_address)\n            ip_integer = int(binascii.hexlify(ip_hex), 16)\n\n            return (ip_integer, 4 if version == socket.AF_INET else 6)\n        except:\n            pass\n\n    raise ValueError(\"invalid IP address\")\n\n\ndef subnetwork_to_ip_range(subnetwork):\n    \"\"\"\n    Returns a tuple (ip_lower, ip_upper, version) containing the\n    integer values of the lower and upper IP addresses respectively\n    in a subnetwork expressed in CIDR notation (as a string), with\n    version being the subnetwork IP version (either 4 or 6).\n\n    Both IPv4 subnetworks (e.g. \"192.168.1.0/24\") and IPv6\n    subnetworks (e.g. \"2a02:a448:ddb0::/44\") are accepted.\n    \"\"\"\n\n    try:\n        fragments = subnetwork.split('/')\n        network_prefix = fragments[0]\n        netmask_len = int(fragments[1])\n\n        # try parsing the subnetwork first as IPv4, then as IPv6\n        for version in (socket.AF_INET, socket.AF_INET6):\n\n            ip_len = 32 if version == socket.AF_INET else 128\n\n            try:\n                suffix_mask = (1 << (ip_len - netmask_len)) - 1\n                netmask = ((1 << ip_len) - 1) - suffix_mask\n                ip_hex = socket.inet_pton(version, network_prefix)\n                ip_lower = int(binascii.hexlify(ip_hex), 16) & netmask\n                ip_upper = ip_lower + suffix_mask\n\n                return (ip_lower,\n                        ip_upper,\n                        4 if version == socket.AF_INET else 6)\n            except:\n                pass\n    except:\n        pass\n\n    raise ValueError(\"invalid subnetwork\")\n\n\ndef dateParser(line):\n    \"\"\"\n    dateParser will read in a line and parse a date.\n    :param line:\n    :return: {str} string\n    \"\"\"\n    try:\n        r = parse(line, fuzzy=True)\n    # if the fuzzy parser failed to parse the line due to\n    # incorrect timezone information issue #5 GitHub\n    except ValueError:\n        r = re.findall('^(.*?)\\s*(?:\\(|utc)', line, re.I)\n        if r:\n            r = parse(r[0])\n    return r\n\n\ndef getHeaderVal(h, data, rex='\\s*(.*?)\\n\\S+:\\s'):\n    \"\"\"\n    getHeaderVal will get the value from one of the email headers.\n    :param h:\n    :param data:\n    :param rex:\n    :return:\n    \"\"\"\n    r = re.findall('%s:%s' % (h, rex), data, re.X | re.DOTALL | re.I)\n    if r:\n        return r[0].strip()\n    else:\n        return None\n\n\ndef getAuthVal(a, data, rex=r'(\\w+)\\b'):\n    \"\"\"\n    getAuthVal parses the authentication-results header for values.\n    Not really used any more.\n    :param a:\n    :param data:\n    :param rex:\n    :return:\n    \"\"\"\n    r = re.findall(r'%s=%s' % (a, rex), data, re.X | re.DOTALL | re.I)\n    if r:\n        return r[0].strip()\n    else:\n        return None\n\n\ndef return_domain(email):\n    f_domain = re.search('<(.*?)>', email)\n\n    if f_domain:\n        domain = re.search('@(.*)', f_domain.group(1))\n    else:\n        domain = re.search('@(.*)', email)\n    return domain.group(1)\n\n\ndef ip_check(ip, domain):\n    spf_record = EmailUtilitiesManager.SpfRecord.from_domain(domain).record.split(\" \")\n\n    includes = [x.split(\":\")[1] for x in spf_record if x.startswith('include')]\n    ips = [x.split(\":\")[1] for x in spf_record if x.startswith('ip')]\n    for include_domain in includes:\n        include_spf = EmailUtilitiesManager.SpfRecord.from_domain(include_domain).record.split(\" \")\n        includes.extend([x.split(\":\")[1] for x in include_spf if x.startswith('include')])\n        ips.extend([x.split(\":\")[1] for x in include_spf if x.startswith('ip')])\n    for cidr in ips:\n        if ip_in_subnetwork(ip, cidr):\n            return True\n    return False\n\n\ndef parseHops(received):\n    previous_hop = {}\n    hops = []\n    ip_checker = pydnsbl.DNSBLIpChecker()\n    domain_checker = pydnsbl.DNSBLDomainChecker()\n    for hop in reversed(received):\n        print(f\"hop: {hop}.\")\n        hop_info = {}\n        hop_info['blacklist_info'] = []\n        hop_info['from_ip_whois'] = {}\n        hop_info['by_ip_whois'] = {}\n\n        try:\n            parsed_route = EmailParserRouting.parserouting(hop)\n        except Exception as e:\n            raise\n        if 'date' not in parsed_route:\n            continue\n        hop_info['time'] = parsed_route['date'].astimezone(datetime.timezone.utc).replace(tzinfo=None)\n        hop_info['blacklisted'] = False\n        if 'from' in parsed_route:\n            for f in parsed_route['from']:\n                print(f\"from: {f}.\")\n                blacklist = {}\n                hop_info['from'] = f        \n                try:\n                    test_ip = ipaddress.ip_address(f)\n                    ip_check = ip_checker.check(f)\n                    #hop_info['from'] = f\n                    try:\n                        obj = IPWhois(f)\n                        hop_info['from_ip_whois'] = obj.lookup_rdap(depth=1)\n                        response = DbIpCity.get(f, api_key='free')\n                        hop_info['from_geo'] = json.loads(response.to_json())\n                    except Exception as expe:\n                        template = \"An exception of type {0} occurred. Arguments:\\n{1!r}\"\n                        message = template.format(type(expe).__name__, expe.args)\n                        print(message)\n                        pass\n                \n                    blacklist['blacklisted'] = ip_check.blacklisted\n                    blacklist['detected_by'] = ip_check.detected_by.copy()\n                    blacklist['categories'] = ip_check.categories.copy()\n                    hop_info['blacklist_info'].append(blacklist)\n                except ValueError as ve:\n                \n                    try:\n                        domain_check = domain_checker.check(f)\n                        resolved_ip_answer = dns.resolver.resolve(f)\n                        #for r in resolved_ip_answer:\n                        #    resolved_ip = r\n                        try:\n                            obj = IPWhois(resolved_ip_answer[0])\n                            ip_whois = obj.lookup_rdap(depth=1)\n                            response = DbIpCity.get(resolved_ip_answer[0], api_key='free')\n                            hop_info['from_geo'] = json.loads(response.to_json())\n                            hop_info['from_ip_whois'] = ip_whois\n                        except Exception as exp:\n                            template = \"An exception of type {0} occurred. Arguments:\\n{1!r}\"\n                            message = template.format(type(exp).__name__, exp.args)\n                            print(message)\n                            pass\n                        \n                        blacklist['blacklisted'] = domain_check.blacklisted\n                        blacklist['detected_by'] = domain_check.detected_by.copy()\n                        blacklist['categories'] = domain_check.categories.copy()\n                        hop_info['blacklist_info'].append(blacklist)\n                        pass\n                    except Exception as e:\n                        \n                        template = \"An exception of type {0} occurred. Arguments:\\n{1!r}\"\n                        message = template.format(type(e).__name__, e.args)\n                        print(message)\n                        pass\n                except Exception as ex:\n                    template = \"An exception of type {0} occurred. Arguments:\\n{1!r}\"\n                    message = template.format(type(ex).__name__, ex.args)\n                    print(message)\n                    \n                if 'blacklisted' in blacklist:\n                    if blacklist['blacklisted'] == True:\n                        hop_info['blacklisted'] = True\n        else:\n            hop_info['from'] = ''\n        if 'by' in parsed_route:\n            \n            hop_info['by'] = parsed_route['by'][0]\n            try:\n                test_ip = ipaddress.ip_address(hop_info['by'])\n                \n                obj = IPWhois(hop_info['by'])\n                \n                response = DbIpCity.get(hop_info['by'], api_key='free')\n                hop_info['by_geo'] = json.loads(response.to_json())\n                hop_info['by_ip_whois'] = obj.lookup_rdap(depth=1)\n                \n            except Exception as exple:\n                try:\n                    resolved_ip_answer = dns.resolver.resolve(hop_info['by'])\n                    resolved_ip = resolved_ip_answer[0]\n                    try:\n                        obj = IPWhois(resolved_ip)\n                        hop_info['by_ip_whois'] = obj.lookup_rdap(depth=1)\n                        response = DbIpCity.get(resolved_ip, api_key='free')\n                        hop_info['by_geo'] = json.loads(response.to_json())\n                    except Exception as expl:\n                        template = \"An exception of type {0} occurred. Arguments:\\n{1!r}\"\n                        message = template.format(type(expl).__name__, expl.args)\n                        print(message)\n                        pass\n                except Exception as exp:\n                    template = \"An exception of type {0} occurred. Arguments:\\n{1!r}\"\n                    message = template.format(type(exp).__name__, exp.args)\n                    print(message)\n                    pass\n                \n            \n\n        if 'with' in parsed_route:\n            hop_info['with'] = parsed_route['with'].split(\" \")[0]\n        else:\n            hop_info['with'] = \"\"\n        if previous_hop:\n            hop_info['delay'] = (parsed_route['date'] - previous_hop['date']).total_seconds()\n        else:\n            hop_info['delay'] = \"*\"\n        previous_hop = hop_info\n        previous_hop['date'] = parsed_route['date']\n        hops.append(hop_info)\n    return hops\n\n\ndef coalesce(input_dict, *arg):\n    for el in arg:\n        if el in input_dict:\n            if isinstance(input_dict[el], list):\n                return input_dict[el][0]\n            else:\n                return input_dict[el]\n    return None\n\n\ndef buildResult(header, siemplify):\n    \"\"\"\n    Creates the result object after parsing the email.\n    :param header:\n    :param mail_data:\n    :return:\n    \"\"\"\n    result = {}\n    result['From'] = coalesce(header, 'from')\n    result['To'] = coalesce(header, 'to', 'delivered-to')\n    result['Subject'] = coalesce(header, 'subject')\n    result['MessageID'] = coalesce(header, 'message-id')\n    result['Date'] = coalesce(header, 'date')\n    result['FromDomain'] = return_domain(result['From'])\n\n    ext = tldextract.extract(result['FromDomain'])\n\n    result['FromParentDomain'] = \".\".join([ext[1], ext[2]])\n    result['MFromDomain'] = return_domain(coalesce(header, 'return-path', 'from'))\n    try:\n        dmarc_sig = coalesce(header, 'authentication-results')\n        res = re.search('header.i=@(.*?)\\s', dmarc_sig)\n        if res:\n            result['DmarcDomain'] = res.group(1)\n    except:\n        pass\n\n    try:\n        received_spf = header.get('received-spf')[0]\n        res = re.search('domain of (?:.*?@)?(.*?)\\s', received_spf)\n        if res:\n            result['SPFDomain'] = res.group(1)\n    except:\n        pass\n    domain_check = checkdmarc.check_domains([result['FromDomain']], include_dmarc_tag_descriptions=True)\n    result['SPF'] = domain_check.get('spf')\n    result['DMARC'] = domain_check.get('dmarc')\n    result['MX'] = domain_check.get('mx')\n    result['DNSSec'] = domain_check.get('dnssec')\n\n    dkim = EmailUtilitiesManager.DKIM(logger=siemplify.LOGGER, headers=header)\n    arc = EmailUtilitiesManager.ARC(logger=siemplify.LOGGER, headers=header)\n\n    result['DKIMVerify'] = dkim.verify()\n    arc_res = {}\n    try:\n        arc_res['result'], arc_res['details'], arc_res['reason'] = arc.verify()\n        arc_res['result'] = arc_res['result'].decode()\n        result['ARCVerify'] = arc_res\n    except:\n        result['ARCVerify'] = {}\n        result['ARCVerify']['result'] = \"error\"\n        pass\n    result['RelayInfo'] = []\n    result['SourceServer'] = \"\"\n\n    try:\n        result['RelayInfo'] = parseHops(header['received'])\n        for fromserver_str in reversed(header['received']):\n            if 'by' in fromserver_str:\n                fromserver = EmailParserRouting.parserouting(fromserver_str)\n                try:\n                    if 'by' in fromserver:\n                        test_ip = ipaddress.ip_address(fromserver['by'][0])\n                        result['SourceServerIP'] = fromserver['by'][0]\n                        result['SourceServer'] = fromserver['by'][0]\n                except Exception as e:\n                    if 'by' in fromserver:\n                        result['SourceServer'] = fromserver['by'][0]\n                        try:\n                            result['SourceServerIP'] = \\\n                            EmailUtilitiesManager.Resolver().query(result['SourceServer'])[0][2]\n                        except:\n                            pass\n                    pass\n                continue\n    except Exception as e:\n        pass\n\n    try:\n        result['SPF']['Auth'] = ip_check(result['SourceServerIP'], result['FromDomain'])\n    except Exception as e:\n        result['SPF']['Auth'] = False\n    try:\n        result['StrongSPF'] = EmailUtilitiesManager.SpfRecord.from_domain(result['FromDomain']).is_record_strong()\n    except:\n        result['StrongSPF'] = False\n\n    return result\n\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = \"Analyze Headers\"\n\n    headers_json = siemplify.extract_action_param(\"Headers JSON\", default_value = \"{}\", print_value=False)\n\n    status = EXECUTION_STATE_COMPLETED  # used to flag back to siemplify system, the action final status\n    output_message = \"output message :\"  # human readable message, showed in UI as the action result\n    result_value = None  # Set a simple result value, used for playbook if\\else and placeholders.\n    h = json.loads(headers_json)\n\n    headers_res = buildResult(h, siemplify)\n    print(json.dumps(headers_res, indent=4, sort_keys=True, default=str))\n    siemplify.result.add_result_json(headers_res)\n    siemplify.result.add_json(\"Headers\", headers_res)\n    siemplify.LOGGER.info(\n        \"\\n  status: {}\\n  result_value: {}\\n  output_message: {}\".format(status, result_value, output_message))\n    siemplify.end(output_message, result_value, status)\n\n\nif __name__ == \"__main__\":\n    main()\n",
   "IntegrationIdentifier":"EmailUtilities",
   "ScriptResultName":"ScriptResult",
   "DynamicResultsMetadata":[
      {
         "ResultName":"JsonResult",
         "ResultExample":"{\r\n    \"ARCVerify\": {\r\n        \"details\": [],\r\n        \"reason\": \"Message is not ARC signed\",\r\n        \"result\": \"none\"\r\n    },\r\n    \"DKIMVerify\": false,\r\n    \"DMARC\": {\r\n        \"location\": \"siemplify.co\",\r\n        \"record\": \"v=DMARC1; p=quarantine; rua=mailto:postmaster@siemplify.co,mailto:y7c5gybh11g81e1c@securemailanalytics.com; ruf=mailto:postmaster@siemplify.co,mailto:x34spt4wbipf9u91@securemailanalytics.com; fo=1;\",\r\n        \"tags\": {\r\n            \"adkim\": {\r\n                \"default\": \"r\",\r\n                \"description\": \"In relaxed mode, the Organizational Domains of both the DKIM-authenticated signing domain (taken from the value of the \\\"d=\\\" tag in the signature) and that of the RFC 5322 From domain must be equal if the identifiers are to be considered aligned.\",\r\n                \"explicit\": false,\r\n                \"name\": \"DKIM Alignment Mode\",\r\n                \"value\": \"r\"\r\n            },\r\n            \"aspf\": {\r\n                \"default\": \"r\",\r\n                \"description\": \"In relaxed mode, the SPF-authenticated domain and RFC5322 From domain must have the same Organizational Domain. In strict mode, only an exact DNS domain match is considered to produce Identifier Alignment.\",\r\n                \"explicit\": false,\r\n                \"name\": \"SPF alignment mode\",\r\n                \"value\": \"r\"\r\n            },\r\n            \"fo\": {\r\n                \"default\": \"0\",\r\n                \"description\": \"1: Generate a DMARC failure report if any underlying authentication mechanism produced something other than an aligned \\\"pass\\\" result.\",\r\n                \"explicit\": true,\r\n                \"name\": \"Failure Reporting Options\",\r\n                \"value\": [\r\n                    \"1\"\r\n                ]\r\n            },\r\n            \"p\": {\r\n                \"description\": \"Specifies the policy to be enacted by the Receiver at the request of the Domain Owner. The policy applies to the domain and to its subdomains, unless subdomain policy is explicitly described using the \\\"sp\\\" tag.\",\r\n                \"explicit\": true,\r\n                \"name\": \"Requested Mail Receiver Policy\",\r\n                \"value\": \"quarantine\"\r\n            },\r\n            \"pct\": {\r\n                \"default\": 100,\r\n                \"description\": \"Integer percentage of messages from the Domain Owner's mail stream to which the DMARC policy is to be applied. However, this MUST NOT be applied to the DMARC-generated reports, all of which must be sent and received unhindered. The purpose of the \\\"pct\\\" tag is to allow Domain Owners to enact a slow rollout of enforcement of the DMARC mechanism.\",\r\n                \"explicit\": false,\r\n                \"name\": \"Percentage\",\r\n                \"value\": 100\r\n            },\r\n            \"rf\": {\r\n                \"default\": \"afrf\",\r\n                \"description\": \"afrf:  \\\"Authentication Failure Reporting Using the Abuse Reporting Format\\\", RFC 6591, April 2012,<http://www.rfc-editor.org/info/rfc6591>\",\r\n                \"explicit\": false,\r\n                \"name\": \"Report Format\",\r\n                \"value\": [\r\n                    \"afrf\"\r\n                ]\r\n            },\r\n            \"ri\": {\r\n                \"default\": 86400,\r\n                \"description\": \"Indicates a request to Receivers to generate aggregate reports separated by no more than the requested number of seconds. DMARC implementations MUST be able to provide daily reports and SHOULD be able to provide hourly reports when requested. However, anything other than a daily report is understood to be accommodated on a best-effort basis.\",\r\n                \"explicit\": false,\r\n                \"name\": \"Report Interval\",\r\n                \"value\": 86400\r\n            },\r\n            \"rua\": {\r\n                \"description\": \" A comma-separated list of DMARC URIs to which aggregate feedback is to be sent.\",\r\n                \"explicit\": true,\r\n                \"name\": \"Aggregate Feedback Addresses\",\r\n                \"value\": [\r\n                    {\r\n                        \"address\": \"postmaster@siemplify.co\",\r\n                        \"scheme\": \"mailto\",\r\n                        \"size_limit\": null\r\n                    },\r\n                    {\r\n                        \"address\": \"y7c5gybh11g81e1c@securemailanalytics.com\",\r\n                        \"scheme\": \"mailto\",\r\n                        \"size_limit\": null\r\n                    }\r\n                ]\r\n            },\r\n            \"ruf\": {\r\n                \"description\": \" A comma-separated list of DMARC URIs to which forensic feedback is to be sent.\",\r\n                \"explicit\": true,\r\n                \"name\": \"Forensic Feedback Addresses\",\r\n                \"value\": [\r\n                    {\r\n                        \"address\": \"postmaster@siemplify.co\",\r\n                        \"scheme\": \"mailto\",\r\n                        \"size_limit\": null\r\n                    },\r\n                    {\r\n                        \"address\": \"x34spt4wbipf9u91@securemailanalytics.com\",\r\n                        \"scheme\": \"mailto\",\r\n                        \"size_limit\": null\r\n                    }\r\n                ]\r\n            },\r\n            \"sp\": {\r\n                \"description\": \"Indicates the policy to be enacted by the Receiver at the request of the Domain Owner. It applies only to subdomains of the domain queried, and not to the domain itself. Its syntax is identical to that of the \\\"p\\\" tag defined above. If absent, the policy specified by the \\\"p\\\" tag MUST be applied for subdomains.\",\r\n                \"explicit\": false,\r\n                \"name\": \"Subdomain Policy\",\r\n                \"value\": \"quarantine\"\r\n            },\r\n            \"v\": {\r\n                \"description\": \"Identifies the record retrieved as a DMARC record. It MUST have the value of \\\"DMARC1\\\". The value of this tag MUST match precisely; if it does not or it is absent, the entire retrieved record MUST be ignored. It MUST be the first tag in the list.\",\r\n                \"explicit\": true,\r\n                \"name\": \"Version\",\r\n                \"value\": \"DMARC1\"\r\n            }\r\n        },\r\n        \"valid\": true,\r\n        \"warnings\": []\r\n    },\r\n    \"DNSSec\": false,\r\n    \"Date\": \"Thu, 03 Feb 2022 14:28:59 -0500\",\r\n    \"DmarcDomain\": \"siemplify.co\",\r\n    \"From\": \"string\",\r\n    \"FromDomain\": \"siemplify.co\",\r\n    \"FromParentDomain\": \"siemplify.co\",\r\n    \"MFromDomain\": \"siemplify.co\",\r\n    \"MX\": {\r\n        \"hosts\": [\r\n            {\r\n                \"addresses\": [\r\n                    \"44.196.125.110\",\r\n                    \"44.198.0.192\",\r\n                    \"52.72.180.143\"\r\n                ],\r\n                \"hostname\": \"mailstream-east.mxrecord.io\",\r\n                \"preference\": 10,\r\n                \"starttls\": false,\r\n                \"tls\": false\r\n            },\r\n            {\r\n                \"addresses\": [\r\n                    \"34.216.5.229\",\r\n                    \"35.164.179.171\",\r\n                    \"54.191.239.242\"\r\n                ],\r\n                \"hostname\": \"mailstream-west.mxrecord.io\",\r\n                \"preference\": 10,\r\n                \"starttls\": false,\r\n                \"tls\": false\r\n            }\r\n        ],\r\n        \"warnings\": [\r\n            \"mailstream-east.mxrecord.io: Connection timed out\",\r\n            \"mailstream-west.mxrecord.io: Connection timed out\"\r\n        ]\r\n    },\r\n    \"MessageID\": \"string\",\r\n    \"RelayInfo\": [\r\n        {\r\n            \"blacklist_info\": [],\r\n            \"blacklisted\": false,\r\n            \"by\": \"mail-ej1-f44.google.com\",\r\n            \"by_ip_whois\": {\r\n                \"asn\": \"15169\",\r\n                \"asn_cidr\": \"209.85.128.0/17\",\r\n                \"asn_country_code\": \"US\",\r\n                \"asn_date\": \"2006-01-13\",\r\n                \"asn_description\": \"GOOGLE, US\",\r\n                \"asn_registry\": \"arin\",\r\n                \"entities\": [\r\n                    \"GOGL\"\r\n                ],\r\n                \"network\": {\r\n                    \"cidr\": \"209.85.128.0/17\",\r\n                    \"country\": null,\r\n                    \"end_address\": \"209.85.255.255\",\r\n                    \"events\": [\r\n                        {\r\n                            \"action\": \"last changed\",\r\n                            \"actor\": null,\r\n                            \"timestamp\": \"2012-02-24T09:44:34-05:00\"\r\n                        },\r\n                        {\r\n                            \"action\": \"registration\",\r\n                            \"actor\": null,\r\n                            \"timestamp\": \"2006-01-13T13:42:45-05:00\"\r\n                        }\r\n                    ],\r\n                    \"handle\": \"NET-209-85-128-0-1\",\r\n                    \"ip_version\": \"v4\",\r\n                    \"links\": [\r\n                        \"https://rdap.arin.net/registry/ip/209.85.128.0\",\r\n                        \"https://whois.arin.net/rest/net/NET-209-85-128-0-1\"\r\n                    ],\r\n                    \"name\": \"GOOGLE\",\r\n                    \"notices\": [\r\n                        {\r\n                            \"description\": \"By using the ARIN RDAP/Whois service, you are agreeing to the RDAP/Whois Terms of Use\",\r\n                            \"links\": [\r\n                                \"https://www.arin.net/resources/registry/whois/tou/\"\r\n                            ],\r\n                            \"title\": \"Terms of Service\"\r\n                        },\r\n                        {\r\n                            \"description\": \"If you see inaccuracies in the results, please visit: \",\r\n                            \"links\": [\r\n                                \"https://www.arin.net/resources/registry/whois/inaccuracy_reporting/\"\r\n                            ],\r\n                            \"title\": \"Whois Inaccuracy Reporting\"\r\n                        },\r\n                        {\r\n                            \"description\": \"Copyright 1997-2022, American Registry for Internet Numbers, Ltd.\",\r\n                            \"links\": null,\r\n                            \"title\": \"Copyright Notice\"\r\n                        }\r\n                    ],\r\n                    \"parent_handle\": \"NET-209-0-0-0-0\",\r\n                    \"raw\": null,\r\n                    \"remarks\": null,\r\n                    \"start_address\": \"209.85.128.0\",\r\n                    \"status\": [\r\n                        \"active\"\r\n                    ],\r\n                    \"type\": \"DIRECT ALLOCATION\"\r\n                },\r\n                \"nir\": null,\r\n                \"objects\": {\r\n                    \"ABUSE5250-ARIN\": {\r\n                        \"contact\": {\r\n                            \"address\": [\r\n                                {\r\n                                    \"type\": null,\r\n                                    \"value\": \"1600 Amphitheatre Parkway\\nMountain View\\nCA\\n94043\\nUnited States\"\r\n                                }\r\n                            ],\r\n                            \"email\": [\r\n                                {\r\n                                    \"type\": null,\r\n                                    \"value\": \"network-abuse@google.com\"\r\n                                }\r\n                            ],\r\n                            \"kind\": \"group\",\r\n                            \"name\": \"Abuse\",\r\n                            \"phone\": [\r\n                                {\r\n                                    \"type\": [\r\n                                        \"work\",\r\n                                        \"voice\"\r\n                                    ],\r\n                                    \"value\": \"+1-650-253-0000\"\r\n                                }\r\n                            ],\r\n                            \"role\": null,\r\n                            \"title\": null\r\n                        },\r\n                        \"entities\": null,\r\n                        \"events\": [\r\n                            {\r\n                                \"action\": \"last changed\",\r\n                                \"actor\": null,\r\n                                \"timestamp\": \"2018-10-24T11:23:55-04:00\"\r\n                            },\r\n                            {\r\n                                \"action\": \"registration\",\r\n                                \"actor\": null,\r\n                                \"timestamp\": \"2015-11-06T15:36:35-05:00\"\r\n                            }\r\n                        ],\r\n                        \"events_actor\": null,\r\n                        \"handle\": \"ABUSE5250-ARIN\",\r\n                        \"links\": [\r\n                            \"https://rdap.arin.net/registry/entity/ABUSE5250-ARIN\",\r\n                            \"https://whois.arin.net/rest/poc/ABUSE5250-ARIN\"\r\n                        ],\r\n                        \"notices\": [\r\n                            {\r\n                                \"description\": \"By using the ARIN RDAP/Whois service, you are agreeing to the RDAP/Whois Terms of Use\",\r\n                                \"links\": [\r\n                                    \"https://www.arin.net/resources/registry/whois/tou/\"\r\n                                ],\r\n                                \"title\": \"Terms of Service\"\r\n                            },\r\n                            {\r\n                                \"description\": \"If you see inaccuracies in the results, please visit: \",\r\n                                \"links\": [\r\n                                    \"https://www.arin.net/resources/registry/whois/inaccuracy_reporting/\"\r\n                                ],\r\n                                \"title\": \"Whois Inaccuracy Reporting\"\r\n                            },\r\n                            {\r\n                                \"description\": \"Copyright 1997-2022, American Registry for Internet Numbers, Ltd.\",\r\n                                \"links\": null,\r\n                                \"title\": \"Copyright Notice\"\r\n                            }\r\n                        ],\r\n                        \"raw\": null,\r\n                        \"remarks\": [\r\n                            {\r\n                                \"description\": \"Please note that the recommended way to file abuse complaints are located in the following links.\\n\\nTo report abuse and illegal activity: https://www.google.com/contact/\\n\\nFor legal requests: http://support.google.com/legal \\n\\nRegards,\\nThe Google Team\",\r\n                                \"links\": null,\r\n                                \"title\": \"Registration Comments\"\r\n                            },\r\n                            {\r\n                                \"description\": \"ARIN has attempted to validate the data for this POC, but has received no response from the POC since 2019-10-24\",\r\n                                \"links\": null,\r\n                                \"title\": \"Unvalidated POC\"\r\n                            }\r\n                        ],\r\n                        \"roles\": [\r\n                            \"abuse\"\r\n                        ],\r\n                        \"status\": null\r\n                    },\r\n                    \"GOGL\": {\r\n                        \"contact\": {\r\n                            \"address\": [\r\n                                {\r\n                                    \"type\": null,\r\n                                    \"value\": \"1600 Amphitheatre Parkway\\nMountain View\\nCA\\n94043\\nUnited States\"\r\n                                }\r\n                            ],\r\n                            \"email\": null,\r\n                            \"kind\": \"org\",\r\n                            \"name\": \"Google LLC\",\r\n                            \"phone\": null,\r\n                            \"role\": null,\r\n                            \"title\": null\r\n                        },\r\n                        \"entities\": [\r\n                            \"ABUSE5250-ARIN\",\r\n                            \"ZG39-ARIN\"\r\n                        ],\r\n                        \"events\": [\r\n                            {\r\n                                \"action\": \"last changed\",\r\n                                \"actor\": null,\r\n                                \"timestamp\": \"2019-10-31T15:45:45-04:00\"\r\n                            },\r\n                            {\r\n                                \"action\": \"registration\",\r\n                                \"actor\": null,\r\n                                \"timestamp\": \"2000-03-30T00:00:00-05:00\"\r\n                            }\r\n                        ],\r\n                        \"events_actor\": null,\r\n                        \"handle\": \"GOGL\",\r\n                        \"links\": [\r\n                            \"https://rdap.arin.net/registry/entity/GOGL\",\r\n                            \"https://whois.arin.net/rest/org/GOGL\"\r\n                        ],\r\n                        \"notices\": null,\r\n                        \"raw\": null,\r\n                        \"remarks\": [\r\n                            {\r\n                                \"description\": \"Please note that the recommended way to file abuse complaints are located in the following links. \\n\\nTo report abuse and illegal activity: https://www.google.com/contact/\\n\\nFor legal requests: http://support.google.com/legal \\n\\nRegards, \\nThe Google Team\",\r\n                                \"links\": null,\r\n                                \"title\": \"Registration Comments\"\r\n                            }\r\n                        ],\r\n                        \"roles\": [\r\n                            \"registrant\"\r\n                        ],\r\n                        \"status\": null\r\n                    },\r\n                    \"ZG39-ARIN\": {\r\n                        \"contact\": {\r\n                            \"address\": [\r\n                                {\r\n                                    \"type\": null,\r\n                                    \"value\": \"1600 Amphitheatre Parkway\\nMountain View\\nCA\\n94043\\nUnited States\"\r\n                                }\r\n                            ],\r\n                            \"email\": [\r\n                                {\r\n                                    \"type\": null,\r\n                                    \"value\": \"arin-contact@google.com\"\r\n                                }\r\n                            ],\r\n                            \"kind\": \"group\",\r\n                            \"name\": \"Google LLC\",\r\n                            \"phone\": [\r\n                                {\r\n                                    \"type\": [\r\n                                        \"work\",\r\n                                        \"voice\"\r\n                                    ],\r\n                                    \"value\": \"+1-650-253-0000\"\r\n                                }\r\n                            ],\r\n                            \"role\": null,\r\n                            \"title\": null\r\n                        },\r\n                        \"entities\": null,\r\n                        \"events\": [\r\n                            {\r\n                                \"action\": \"last changed\",\r\n                                \"actor\": null,\r\n                                \"timestamp\": \"2021-11-10T10:26:54-05:00\"\r\n                            },\r\n                            {\r\n                                \"action\": \"registration\",\r\n                                \"actor\": null,\r\n                                \"timestamp\": \"2000-11-30T13:54:08-05:00\"\r\n                            }\r\n                        ],\r\n                        \"events_actor\": null,\r\n                        \"handle\": \"ZG39-ARIN\",\r\n                        \"links\": [\r\n                            \"https://rdap.arin.net/registry/entity/ZG39-ARIN\",\r\n                            \"https://whois.arin.net/rest/poc/ZG39-ARIN\"\r\n                        ],\r\n                        \"notices\": [\r\n                            {\r\n                                \"description\": \"By using the ARIN RDAP/Whois service, you are agreeing to the RDAP/Whois Terms of Use\",\r\n                                \"links\": [\r\n                                    \"https://www.arin.net/resources/registry/whois/tou/\"\r\n                                ],\r\n                                \"title\": \"Terms of Service\"\r\n                            },\r\n                            {\r\n                                \"description\": \"If you see inaccuracies in the results, please visit: \",\r\n                                \"links\": [\r\n                                    \"https://www.arin.net/resources/registry/whois/inaccuracy_reporting/\"\r\n                                ],\r\n                                \"title\": \"Whois Inaccuracy Reporting\"\r\n                            },\r\n                            {\r\n                                \"description\": \"Copyright 1997-2022, American Registry for Internet Numbers, Ltd.\",\r\n                                \"links\": null,\r\n                                \"title\": \"Copyright Notice\"\r\n                            }\r\n                        ],\r\n                        \"raw\": null,\r\n                        \"remarks\": null,\r\n                        \"roles\": [\r\n                            \"technical\",\r\n                            \"administrative\"\r\n                        ],\r\n                        \"status\": [\r\n                            \"validated\"\r\n                        ]\r\n                    }\r\n                },\r\n                \"query\": \"209.85.218.44\",\r\n                \"raw\": null\r\n            },\r\n            \"date\": \"2022-02-03 11:29:11-08:00\",\r\n            \"delay\": \"*\",\r\n            \"from\": \"\",\r\n            \"from_ip_whois\": {},\r\n            \"time\": \"2022-02-03 19:29:11\",\r\n            \"with\": \"smtp\"\r\n        },\r\n        {\r\n            \"blacklist_info\": [\r\n                {\r\n                    \"blacklisted\": true,\r\n                    \"categories\": \"{'unknown'}\",\r\n                    \"detected_by\": {\r\n                        \"dnsbl.sorbs.net\": [\r\n                            \"unknown\"\r\n                        ],\r\n                        \"spam.dnsbl.sorbs.net\": [\r\n                            \"unknown\"\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    \"blacklisted\": false,\r\n                    \"categories\": \"set()\",\r\n                    \"detected_by\": {}\r\n                }\r\n            ],\r\n            \"blacklisted\": true,\r\n            \"by\": \"10.197.37.9\",\r\n            \"by_ip_whois\": {},\r\n            \"date\": \"2022-02-03 19:29:12+00:00\",\r\n            \"delay\": 1.0,\r\n            \"from\": \"mail-ej1-f44.google.com\",\r\n            \"from_geo\": {\r\n                \"city\": \"Mountain View\",\r\n                \"country\": \"US\",\r\n                \"ip_address\": \"209.85.218.44\",\r\n                \"latitude\": 37.3893889,\r\n                \"longitude\": -122.0832101,\r\n                \"region\": \"California\"\r\n            },\r\n            \"from_ip_whois\": {\r\n                \"asn\": \"15169\",\r\n                \"asn_cidr\": \"209.85.128.0/17\",\r\n                \"asn_country_code\": \"US\",\r\n                \"asn_date\": \"2006-01-13\",\r\n                \"asn_description\": \"GOOGLE, US\",\r\n                \"asn_registry\": \"arin\",\r\n                \"entities\": [\r\n                    \"GOGL\"\r\n                ],\r\n                \"network\": {\r\n                    \"cidr\": \"209.85.128.0/17\",\r\n                    \"country\": null,\r\n                    \"end_address\": \"209.85.255.255\",\r\n                    \"events\": [\r\n                        {\r\n                            \"action\": \"last changed\",\r\n                            \"actor\": null,\r\n                            \"timestamp\": \"2012-02-24T09:44:34-05:00\"\r\n                        },\r\n                        {\r\n                            \"action\": \"registration\",\r\n                            \"actor\": null,\r\n                            \"timestamp\": \"2006-01-13T13:42:45-05:00\"\r\n                        }\r\n                    ],\r\n                    \"handle\": \"NET-209-85-128-0-1\",\r\n                    \"ip_version\": \"v4\",\r\n                    \"links\": [\r\n                        \"https://rdap.arin.net/registry/ip/209.85.128.0\",\r\n                        \"https://whois.arin.net/rest/net/NET-209-85-128-0-1\"\r\n                    ],\r\n                    \"name\": \"GOOGLE\",\r\n                    \"notices\": [\r\n                        {\r\n                            \"description\": \"By using the ARIN RDAP/Whois service, you are agreeing to the RDAP/Whois Terms of Use\",\r\n                            \"links\": [\r\n                                \"https://www.arin.net/resources/registry/whois/tou/\"\r\n                            ],\r\n                            \"title\": \"Terms of Service\"\r\n                        },\r\n                        {\r\n                            \"description\": \"If you see inaccuracies in the results, please visit: \",\r\n                            \"links\": [\r\n                                \"https://www.arin.net/resources/registry/whois/inaccuracy_reporting/\"\r\n                            ],\r\n                            \"title\": \"Whois Inaccuracy Reporting\"\r\n                        },\r\n                        {\r\n                            \"description\": \"Copyright 1997-2022, American Registry for Internet Numbers, Ltd.\",\r\n                            \"links\": null,\r\n                            \"title\": \"Copyright Notice\"\r\n                        }\r\n                    ],\r\n                    \"parent_handle\": \"NET-209-0-0-0-0\",\r\n                    \"raw\": null,\r\n                    \"remarks\": null,\r\n                    \"start_address\": \"209.85.128.0\",\r\n                    \"status\": [\r\n                        \"active\"\r\n                    ],\r\n                    \"type\": \"DIRECT ALLOCATION\"\r\n                },\r\n                \"nir\": null,\r\n                \"objects\": {\r\n                    \"ABUSE5250-ARIN\": {\r\n                        \"contact\": {\r\n                            \"address\": [\r\n                                {\r\n                                    \"type\": null,\r\n                                    \"value\": \"1600 Amphitheatre Parkway\\nMountain View\\nCA\\n94043\\nUnited States\"\r\n                                }\r\n                            ],\r\n                            \"email\": [\r\n                                {\r\n                                    \"type\": null,\r\n                                    \"value\": \"network-abuse@google.com\"\r\n                                }\r\n                            ],\r\n                            \"kind\": \"group\",\r\n                            \"name\": \"Abuse\",\r\n                            \"phone\": [\r\n                                {\r\n                                    \"type\": [\r\n                                        \"work\",\r\n                                        \"voice\"\r\n                                    ],\r\n                                    \"value\": \"+1-650-253-0000\"\r\n                                }\r\n                            ],\r\n                            \"role\": null,\r\n                            \"title\": null\r\n                        },\r\n                        \"entities\": null,\r\n                        \"events\": [\r\n                            {\r\n                                \"action\": \"last changed\",\r\n                                \"actor\": null,\r\n                                \"timestamp\": \"2018-10-24T11:23:55-04:00\"\r\n                            },\r\n                            {\r\n                                \"action\": \"registration\",\r\n                                \"actor\": null,\r\n                                \"timestamp\": \"2015-11-06T15:36:35-05:00\"\r\n                            }\r\n                        ],\r\n                        \"events_actor\": null,\r\n                        \"handle\": \"ABUSE5250-ARIN\",\r\n                        \"links\": [\r\n                            \"https://rdap.arin.net/registry/entity/ABUSE5250-ARIN\",\r\n                            \"https://whois.arin.net/rest/poc/ABUSE5250-ARIN\"\r\n                        ],\r\n                        \"notices\": [\r\n                            {\r\n                                \"description\": \"By using the ARIN RDAP/Whois service, you are agreeing to the RDAP/Whois Terms of Use\",\r\n                                \"links\": [\r\n                                    \"https://www.arin.net/resources/registry/whois/tou/\"\r\n                                ],\r\n                                \"title\": \"Terms of Service\"\r\n                            },\r\n                            {\r\n                                \"description\": \"If you see inaccuracies in the results, please visit: \",\r\n                                \"links\": [\r\n                                    \"https://www.arin.net/resources/registry/whois/inaccuracy_reporting/\"\r\n                                ],\r\n                                \"title\": \"Whois Inaccuracy Reporting\"\r\n                            },\r\n                            {\r\n                                \"description\": \"Copyright 1997-2022, American Registry for Internet Numbers, Ltd.\",\r\n                                \"links\": null,\r\n                                \"title\": \"Copyright Notice\"\r\n                            }\r\n                        ],\r\n                        \"raw\": null,\r\n                        \"remarks\": [\r\n                            {\r\n                                \"description\": \"Please note that the recommended way to file abuse complaints are located in the following links.\\n\\nTo report abuse and illegal activity: https://www.google.com/contact/\\n\\nFor legal requests: http://support.google.com/legal \\n\\nRegards,\\nThe Google Team\",\r\n                                \"links\": null,\r\n                                \"title\": \"Registration Comments\"\r\n                            },\r\n                            {\r\n                                \"description\": \"ARIN has attempted to validate the data for this POC, but has received no response from the POC since 2019-10-24\",\r\n                                \"links\": null,\r\n                                \"title\": \"Unvalidated POC\"\r\n                            }\r\n                        ],\r\n                        \"roles\": [\r\n                            \"abuse\"\r\n                        ],\r\n                        \"status\": null\r\n                    },\r\n                    \"GOGL\": {\r\n                        \"contact\": {\r\n                            \"address\": [\r\n                                {\r\n                                    \"type\": null,\r\n                                    \"value\": \"1600 Amphitheatre Parkway\\nMountain View\\nCA\\n94043\\nUnited States\"\r\n                                }\r\n                            ],\r\n                            \"email\": null,\r\n                            \"kind\": \"org\",\r\n                            \"name\": \"Google LLC\",\r\n                            \"phone\": null,\r\n                            \"role\": null,\r\n                            \"title\": null\r\n                        },\r\n                        \"entities\": [\r\n                            \"ABUSE5250-ARIN\",\r\n                            \"ZG39-ARIN\"\r\n                        ],\r\n                        \"events\": [\r\n                            {\r\n                                \"action\": \"last changed\",\r\n                                \"actor\": null,\r\n                                \"timestamp\": \"2019-10-31T15:45:45-04:00\"\r\n                            },\r\n                            {\r\n                                \"action\": \"registration\",\r\n                                \"actor\": null,\r\n                                \"timestamp\": \"2000-03-30T00:00:00-05:00\"\r\n                            }\r\n                        ],\r\n                        \"events_actor\": null,\r\n                        \"handle\": \"GOGL\",\r\n                        \"links\": [\r\n                            \"https://rdap.arin.net/registry/entity/GOGL\",\r\n                            \"https://whois.arin.net/rest/org/GOGL\"\r\n                        ],\r\n                        \"notices\": null,\r\n                        \"raw\": null,\r\n                        \"remarks\": [\r\n                            {\r\n                                \"description\": \"Please note that the recommended way to file abuse complaints are located in the following links. \\n\\nTo report abuse and illegal activity: https://www.google.com/contact/\\n\\nFor legal requests: http://support.google.com/legal \\n\\nRegards, \\nThe Google Team\",\r\n                                \"links\": null,\r\n                                \"title\": \"Registration Comments\"\r\n                            }\r\n                        ],\r\n                        \"roles\": [\r\n                            \"registrant\"\r\n                        ],\r\n                        \"status\": null\r\n                    },\r\n                    \"ZG39-ARIN\": {\r\n                        \"contact\": {\r\n                            \"address\": [\r\n                                {\r\n                                    \"type\": null,\r\n                                    \"value\": \"1600 Amphitheatre Parkway\\nMountain View\\nCA\\n94043\\nUnited States\"\r\n                                }\r\n                            ],\r\n                            \"email\": [\r\n                                {\r\n                                    \"type\": null,\r\n                                    \"value\": \"arin-contact@google.com\"\r\n                                }\r\n                            ],\r\n                            \"kind\": \"group\",\r\n                            \"name\": \"Google LLC\",\r\n                            \"phone\": [\r\n                                {\r\n                                    \"type\": [\r\n                                        \"work\",\r\n                                        \"voice\"\r\n                                    ],\r\n                                    \"value\": \"+1-650-253-0000\"\r\n                                }\r\n                            ],\r\n                            \"role\": null,\r\n                            \"title\": null\r\n                        },\r\n                        \"entities\": null,\r\n                        \"events\": [\r\n                            {\r\n                                \"action\": \"last changed\",\r\n                                \"actor\": null,\r\n                                \"timestamp\": \"2021-11-10T10:26:54-05:00\"\r\n                            },\r\n                            {\r\n                                \"action\": \"registration\",\r\n                                \"actor\": null,\r\n                                \"timestamp\": \"2000-11-30T13:54:08-05:00\"\r\n                            }\r\n                        ],\r\n                        \"events_actor\": null,\r\n                        \"handle\": \"ZG39-ARIN\",\r\n                        \"links\": [\r\n                            \"https://rdap.arin.net/registry/entity/ZG39-ARIN\",\r\n                            \"https://whois.arin.net/rest/poc/ZG39-ARIN\"\r\n                        ],\r\n                        \"notices\": [\r\n                            {\r\n                                \"description\": \"By using the ARIN RDAP/Whois service, you are agreeing to the RDAP/Whois Terms of Use\",\r\n                                \"links\": [\r\n                                    \"https://www.arin.net/resources/registry/whois/tou/\"\r\n                                ],\r\n                                \"title\": \"Terms of Service\"\r\n                            },\r\n                            {\r\n                                \"description\": \"If you see inaccuracies in the results, please visit: \",\r\n                                \"links\": [\r\n                                    \"https://www.arin.net/resources/registry/whois/inaccuracy_reporting/\"\r\n                                ],\r\n                                \"title\": \"Whois Inaccuracy Reporting\"\r\n                            },\r\n                            {\r\n                                \"description\": \"Copyright 1997-2022, American Registry for Internet Numbers, Ltd.\",\r\n                                \"links\": null,\r\n                                \"title\": \"Copyright Notice\"\r\n                            }\r\n                        ],\r\n                        \"raw\": null,\r\n                        \"remarks\": null,\r\n                        \"roles\": [\r\n                            \"technical\",\r\n                            \"administrative\"\r\n                        ],\r\n                        \"status\": [\r\n                            \"validated\"\r\n                        ]\r\n                    }\r\n                },\r\n                \"query\": \"209.85.218.44\",\r\n                \"raw\": null\r\n            },\r\n            \"time\": \"2022-02-03 19:29:12\",\r\n            \"with\": \"smtps\"\r\n        },\r\n        {\r\n            \"blacklist_info\": [\r\n                {\r\n                    \"blacklisted\": true,\r\n                    \"categories\": \"{'unknown'}\",\r\n                    \"detected_by\": {\r\n                        \"bogons.cymru.com\": [\r\n                            \"unknown\"\r\n                        ],\r\n                        \"spambot.bls.digibase.ca\": [\r\n                            \"unknown\"\r\n                        ]\r\n                    }\r\n                }\r\n            ],\r\n            \"blacklisted\": true,\r\n            \"by\": \"atlas306.free.mail.bf1.yahoo.com\",\r\n            \"by_ip_whois\": {},\r\n            \"date\": \"2022-02-03 19:29:12+00:00\",\r\n            \"delay\": 0.0,\r\n            \"from\": \"10.197.37.9\",\r\n            \"from_ip_whois\": {},\r\n            \"time\": \"2022-02-03 19:29:12\",\r\n            \"with\": \"https\"\r\n        }\r\n    ],\r\n    \"SPF\": {\r\n        \"Auth\": false,\r\n        \"dns_lookups\": 11,\r\n        \"error\": \"Parsing the SPF record requires 11/10 maximum DNS lookups - https://tools.ietf.org/html/rfc7208#section-4.6.4\",\r\n        \"record\": \"v=spf1 a include:_spf.google.com include:mktomail.com include:mail.zendesk.com include:_spf.salesforce.com include:_spf.atlassian.net include:sent-via.netsuite.com ~all\",\r\n        \"valid\": false,\r\n        \"warnings\": []\r\n    },\r\n    \"SPFDomain\": \"siemplify.co\",\r\n    \"SourceServer\": \"atlas306.free.mail.bf1.yahoo.com\",\r\n    \"SourceServerIP\": \"10.197.37.9\",\r\n    \"StrongSPF\": true,\r\n    \"Subject\": \"string\",\r\n    \"To\": \"string\"\r\n}",
         "ShowResult":true
      }
   ],
   "Creator":"Rob",
   "IsEnabled":true,
   "IsCustom":false,
   "IsSystem":false,
   "Version":59.0,
   "TimeoutSeconds":300,
   "IsAsync":false,
   "AsyncPollingIntervalInSeconds":30,
   "TotalIntervalTimeoutForAsyncInSeconds":86400,
   "Parameters":[
      {
         "CustomActionId":769,
         "IsMandatory":true,
         "DefaultValue":"{}",
         "Description":"The JSON object that contains the email headers.",
         "Name":"Headers JSON",
         "Value":"{}",
         "Type":0,
         "OptionalValues":null,
         "OptionalValuesJson":null
      }
   ],
   "DefaultResultValue":"",
   "PythonVersion":"None",
   "SimulationData":{
      "Entities":null
   },
   "SimulationDataJson":null
}