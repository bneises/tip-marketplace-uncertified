{
  "Name": "Enrich Entities From Table",
  "Description": "Search specific fields (columns) in a table",
  "Script": "from SiemplifyAction import *\nfrom airtable import Airtable\nfrom airtable.auth import AirtableAuth\nimport json, sys, copy\nfrom datetime import datetime\nfrom datetime import timedelta\nfrom SiemplifyUtils import convert_dict_to_json_result_dict, add_prefix_to_dict\n\nINTEGRATION_NAME = \"AirTable\"\n\ndef get_unicode(value):\n    return str(value)\n\n\ndef dict_to_flat(target_dict):\n    \"\"\"\n    Receives nested dictionary and returns it as a flat dictionary.\n    :param target_dict: {dict}\n    :return: Flat dict : {dict}\n    \"\"\"\n    target_dict = copy.deepcopy(target_dict)\n\n    def expand(raw_key, raw_value):\n        key = raw_key\n        value = raw_value\n        \"\"\"\n        :param key: {string}\n        :param value: {string}\n        :return: Recursive function.\n        \"\"\"\n        if value is None:\n            return [(get_unicode(key), u\"\")]\n        elif isinstance(value, dict):\n            # Handle dict type value\n            return [(u\"{0}_{1}\".format(get_unicode(key),\n                                       get_unicode(sub_key)),\n                     get_unicode(sub_value)) for sub_key, sub_value in dict_to_flat(value).items()]\n        elif isinstance(value, list):\n            # Handle list type value\n            count = 1\n            l = []\n            items_to_remove = []\n            for value_item in value:\n                if isinstance(value_item, dict):\n                    # Handle nested dict in list\n                    l.extend([(u\"{0}_{1}_{2}\".format(get_unicode(key),\n                                                     get_unicode(count),\n                                                     get_unicode(sub_key)),\n                               sub_value)\n                              for sub_key, sub_value in dict_to_flat(value_item).items()])\n                    items_to_remove.append(value_item)\n                    count += 1\n                elif isinstance(value_item, list):\n                    l.extend(expand(get_unicode(key) + u'_' + get_unicode(count), value_item))\n                    count += 1\n                    items_to_remove.append(value_item)\n\n            for value_item in items_to_remove:\n                value.remove(value_item)\n\n            for value_item in value:\n                l.extend([(get_unicode(key) + u'_' + get_unicode(count), value_item)])\n                count += 1\n\n            return l\n        else:\n            return [(get_unicode(key), get_unicode(value))]\n\n    items = [item for sub_key, sub_value in target_dict.items() for item in\n             expand(sub_key, sub_value)]\n    return dict(items)\n\n\ndef main():\n    siemplify = SiemplifyAction()\n    \n    api_key = siemplify.extract_configuration_param(provider_name=INTEGRATION_NAME,param_name=\"Api key\")\n    base_id = siemplify.parameters[\"Base id\"]\n    table_name = siemplify.parameters[\"Table name\"]\n    field_name = str(siemplify.parameters[\"Field name\"])\n    entity_field = str(siemplify.parameters.get(\"Entity Field\"))\n    max_records_str = str(siemplify.parameters[\"Max records\"])\n    enrichment_prefix = siemplify.parameters.get(\"Enrichment Prefix\", \"\")\n\n    max_records = 5\n\n    try:\n        max_records = int(max_records_str)\n    except ValueError:\n        print(max_records_str + \" is not an int!\")\n    \n\n    airtable = Airtable(base_id, table_name, api_key)\n    \n    result_json = {}\n    successful_entities = []\n    failed_entities = []\n    for entity in siemplify.target_entities:\n        try:\n            if entity_field:\n                field_value = entity.additional_properties.get(entity_field)\n                if not field_value:\n                    raise Exception(\"\\\"{}\\\" not found in enrichment of \\\"{}\\\"\".format(field_value, entity.identifier))\n            else:\n                field_value = entity.identifier\n        \n            results = airtable.search(field_name, field_value.strip(), maxRecords=max_records)\n            if not results:\n                results = airtable.search(field_name, field_value.strip().lower(), maxRecords=max_records)\n        except Exception as e:\n            failed_entities.append({\"identifier\": entity.identifier, \"error\": str(e)})\n            continue\n\n        if results:\n            results = results[0] # What should we do if we have more than one row?\n            result_json[entity.identifier] = results\n            entity.additional_properties.update(add_prefix_to_dict(dict_to_flat(results), enrichment_prefix))\n            successful_entities.append(entity)\n    \n    if successful_entities:\n        siemplify.update_entities(successful_entities)\n    \n    result_value = len(successful_entities)\n    output_message = \"Found results for {} entities\".format(result_value)\n    \n    if failed_entities:\n        output_message += \"\\n\" + \"Failed for {} entities. See JSON for details\".format(len(failed_entities))\n        siemplify.result.add_json(\"Errors\", failed_entities)\n    \n    if result_json:\n        siemplify.result.add_result_json(convert_dict_to_json_result_dict(result_json))\n    \n    siemplify.end(output_message, result_value)\n\nif __name__ == \"__main__\":\n    main()",
  "IntegrationIdentifier": "AirTable",
  "ScriptResultName": "ScriptResult",
  "DynamicResultsMetadata": [
    {
      "ResultName": "JsonResult",
      "ResultExample": "[\n  {\n    \"id\": \"recCc2V3tpfStq4kh\",\n    \"fields\": {\n      \"Field_Name_1\": \"Field_Value_1\",\n      \"Field_Name_2\": \"Field_Value_2\",\n      \"Field_Name_3\": \"Field_Value_3\"\n    },\n    \"createdTime\": \"2019-06-27T06:22:10.000Z\"\n  }\n]",
      "ShowResult": true
    }
  ],
  "Creator": "Admin",
  "IsEnabled": true,
  "IsCustom": false,
  "IsSystem": false,
  "Version": 46.0,
  "TimeoutSeconds": 300,
  "Parameters": [
    {
      "CustomActionId": 0,
      "IsMandatory": false,
      "DefaultValue": "AT_",
      "Description": "Prefix to use for entity enrichment",
      "Name": "Enrichment Prefix",
      "Value": "AT_",
      "Type": 0,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603730199478,
      "ModificationTimeUnixTimeInMs": 1603730199478
    },
    {
      "CustomActionId": 0,
      "IsMandatory": false,
      "DefaultValue": "100",
      "Description": "The maximum records (rows) that will be affected by the action",
      "Name": "Max records",
      "Value": "100",
      "Type": 0,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603730199478,
      "ModificationTimeUnixTimeInMs": 1603730199478
    },
    {
      "CustomActionId": 0,
      "IsMandatory": true,
      "DefaultValue": "",
      "Description": "Base is a database in Airtable in which you store data.The base ID can be found in the URL of the API page of the base. ",
      "Name": "Base id",
      "Value": "",
      "Type": 0,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603730199478,
      "ModificationTimeUnixTimeInMs": 1603730199478
    },
    {
      "CustomActionId": 0,
      "IsMandatory": true,
      "DefaultValue": "",
      "Description": "A table stores similar (structured) data, and each base can have multiple tables.  This parameter indicates the name of the table within the base.",
      "Name": "Table name",
      "Value": "",
      "Type": 0,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603730199478,
      "ModificationTimeUnixTimeInMs": 1603730199478
    },
    {
      "CustomActionId": 0,
      "IsMandatory": true,
      "DefaultValue": "",
      "Description": "The name of a specific field (column) in the table",
      "Name": "Field name",
      "Value": "",
      "Type": 0,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603730199478,
      "ModificationTimeUnixTimeInMs": 1603730199478
    },
    {
      "CustomActionId": 0,
      "IsMandatory": false,
      "DefaultValue": null,
      "Description": "Entity field to used for AirTable search (Can be Identifier or any other enrichment field). \nDefault is Identifier",
      "Name": "Entity Field",
      "Value": null,
      "Type": 0,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603730199478,
      "ModificationTimeUnixTimeInMs": 1603730199478
    }
  ],
  "DefaultResultValue": "",
  "PythonVersion": "None",
  "SimulationData": {
    "Entities": null
  },
  "SimulationDataJson": null,
  "Id": 0,
  "CreationTimeUnixTimeInMs": 1603730199476,
  "ModificationTimeUnixTimeInMs": 1603730199476
}