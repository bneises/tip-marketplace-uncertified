{
  "IsEnabled": true,
  "IsCustom": false,
  "Integration": "AirTable",
  "DocumentationLink": null,
  "Name": "AirTable Connector",
  "Description": "The Connector ingests records from a given table in Airtable",
  "Creator": "Admin",
  "Script": "from SiemplifyConnectors import SiemplifyConnectorExecution\nfrom SiemplifyConnectorsDataModel import AlertInfo\nfrom SiemplifyUtils import output_handler, unix_now\nfrom SiemplifyConnectorsDataModel import CaseInfo\nimport SiemplifyUtils\nfrom airtable import Airtable\nfrom airtable.auth import AirtableAuth\nimport uuid\nimport sys\n\nVENDOR = \"AirTable\"\nPRODUCT = \"AirTable\"\n\n@output_handler\ndef generate_alert_from_record(record, alert_type, alert_name_field, alert_name_prefix):\n\n    case_info = CaseInfo()\n    case_info.events = []\n    case_info.source_grouping_identifier = str(uuid.uuid4())\n    case_info.ticket_id = str(uuid.uuid4()) \n    case_info.device_product = PRODUCT\n    case_info.device_vendor = VENDOR\n\n    for field in record['fields']:\n        if field == 'Type':\n            case_info.extensions['Record_Type'] = record['fields'][field]\n        else:\n            case_info.extensions[field.replace(' ','_')] = record['fields'][field]\n\n    if alert_name_field:\n        case_info.name =  record['fields'][alert_name_field]\n        if alert_name_prefix:\n            case_info.name = alert_name_prefix  + case_info.name\n    else:\n        case_info.name = 'AT Record ' + str(uuid.uuid4()) \n\n    case_info.rule_generator = alert_type \n\n    case_info.priority = 60  # Informative = -1,Low = 40,Medium = 60,High = 80,Critical = 100.\n    case_info.start_time = SiemplifyUtils.unix_now()  # Times should be saved in UnixTime. You may use SiemplifyUtils DateTime conversions\n    case_info.end_time = SiemplifyUtils.unix_now()\n\n    #case_info.device_vendor = VENDOR\n    \n    event = generate_event(case_info)\n    case_info.events.append(event)\n\n    return case_info\n\n\ndef generate_event(case_info):\n    event = {}\n\n          # Time Fields (Arcsight Example):\n    event[\"StartTime\"] = SiemplifyUtils.unix_now()\n    event[\"EndTime\"] = SiemplifyUtils.unix_now()\n    event[\"name\"] = case_info.name\n    event[\"event_type\"] = case_info.rule_generator\n    event[\"device_product\"] = PRODUCT  \n\n    return event\n\n@output_handler\ndef main():\n\n    \n    siemplify = SiemplifyConnectorExecution()  # Siemplify main SDK wrapper\n    env_list = []\n    api_key = siemplify.extract_connector_param(\"Api key\")\n    base_id = siemplify.extract_connector_param(\"Base id\")\n    table_name = siemplify.extract_connector_param(\"Table name\")\n    field_name = siemplify.extract_connector_param(\"Field name\",default_value = None)\n    field_value = siemplify.extract_connector_param(\"Field value\",default_value = None)\n    max_records_str = str(siemplify.extract_connector_param(\"Max records\"))\n    alert_name_field = siemplify.extract_connector_param(\"Alert name field\",default_value = None)\n    alert_name_prefix = siemplify.extract_connector_param(\"Alert name prefix\",default_value = None)\n    alert_type = siemplify.extract_connector_param(\"Alert type\",default_value = None)\n\n    max_records = 5\n\n    try:\n        max_records = int(max_records_str)\n    except ValueError:\n        print(max_records_str + \" is not an int!\")\n    \n\n    airtable = Airtable(base_id, table_name, api_key)\n    \n    records = []\n    if field_name:\n        fields = field_value.split(',')\n        for field in fields:\n            query_results = airtable.search(field_name, field.strip(), maxRecords=max_records)\n            records = records + query_results\n    else:\n        records = airtable.get_all(maxRecords=max_records)\n    \n    output_variables = {}\n    log_items = []  #\n    cases = []\n    print(len(records))\n\n    for record in records:\n        case_from_record = generate_alert_from_record(record,alert_type,alert_name_field, alert_name_prefix)\n        cases.append(case_from_record)\n    siemplify.return_package(cases, output_variables, log_items)\n\n\n\nif __name__ == \"__main__\":\n    main()",
  "Version": 6,
  "MappingRules": [],
  "ProductToVisualFamilyRecords": [],
  "SimulationUseCases": {
    "CasesForUseCase": [],
    "UseCaseName": null
  },
  "Parameters": [
    {
      "ConnectorDefinitionId": 7,
      "IsMandatory": false,
      "DefaultValue": "<alert_name_field>",
      "Name": "Alert name field",
      "Type": 2,
      "Mode": 2,
      "Description": "Determines the Alert name based on the airtable column name defined in the parameter",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603894884278,
      "ModificationTimeUnixTimeInMs": 1603894884278
    },
    {
      "ConnectorDefinitionId": 7,
      "IsMandatory": false,
      "DefaultValue": "<alert_name_prefix>",
      "Name": "Alert name prefix",
      "Type": 2,
      "Mode": 2,
      "Description": "The alert name prefix",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603894884278,
      "ModificationTimeUnixTimeInMs": 1603894884278
    },
    {
      "ConnectorDefinitionId": 7,
      "IsMandatory": true,
      "DefaultValue": "<alert_type>",
      "Name": "Alert type",
      "Type": 2,
      "Mode": 2,
      "Description": "Determines the Alert type based on the airtable column name defined in the parameter",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603894884278,
      "ModificationTimeUnixTimeInMs": 1603894884278
    },
    {
      "ConnectorDefinitionId": 7,
      "IsMandatory": true,
      "DefaultValue": "",
      "Name": "Api key",
      "Type": 3,
      "Mode": 2,
      "Description": "Your API Key can be found in your account overview under API",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603894884278,
      "ModificationTimeUnixTimeInMs": 1603894884278
    },
    {
      "ConnectorDefinitionId": 7,
      "IsMandatory": true,
      "DefaultValue": "<base_id>",
      "Name": "Base id",
      "Type": 2,
      "Mode": 2,
      "Description": "Base is a database in Airtable in which you store data. The base ID can be found in the URL of the API page of the base.",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603894884278,
      "ModificationTimeUnixTimeInMs": 1603894884278
    },
    {
      "ConnectorDefinitionId": 7,
      "IsMandatory": true,
      "DefaultValue": "<none>",
      "Name": "DeviceProductField",
      "Type": 2,
      "Mode": 0,
      "Description": "The field name used to determine the device product",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603894884278,
      "ModificationTimeUnixTimeInMs": 1603894884278
    },
    {
      "ConnectorDefinitionId": 7,
      "IsMandatory": true,
      "DefaultValue": "<none>",
      "Name": "EventClassId",
      "Type": 2,
      "Mode": 0,
      "Description": "The field name used to determine the event name (sub-type)",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603894884278,
      "ModificationTimeUnixTimeInMs": 1603894884278
    },
    {
      "ConnectorDefinitionId": 7,
      "IsMandatory": false,
      "DefaultValue": "<field_name>",
      "Name": "Field name",
      "Type": 2,
      "Mode": 2,
      "Description": "The field name that you would like to search the value by",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603894884278,
      "ModificationTimeUnixTimeInMs": 1603894884278
    },
    {
      "ConnectorDefinitionId": 7,
      "IsMandatory": false,
      "DefaultValue": "<field_value>",
      "Name": "Field value",
      "Type": 2,
      "Mode": 2,
      "Description": "The value that you would like to search for under the relevant field name",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603894884278,
      "ModificationTimeUnixTimeInMs": 1603894884278
    },
    {
      "ConnectorDefinitionId": 7,
      "IsMandatory": true,
      "DefaultValue": "300",
      "Name": "Max records",
      "Type": 2,
      "Mode": 2,
      "Description": "The maximum rows in the table that will be affected by the action",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603894884278,
      "ModificationTimeUnixTimeInMs": 1603894884278
    },
    {
      "ConnectorDefinitionId": 7,
      "IsMandatory": true,
      "DefaultValue": "30",
      "Name": "PythonProcessTimeout",
      "Type": 2,
      "Mode": 0,
      "Description": "The timeout limit (in seconds) for the python process running current script",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603894884278,
      "ModificationTimeUnixTimeInMs": 1603894884278
    },
    {
      "ConnectorDefinitionId": 7,
      "IsMandatory": true,
      "DefaultValue": "<table_name>",
      "Name": "Table name",
      "Type": 2,
      "Mode": 2,
      "Description": "Each Base can include multiple tables. The parameter indicates the name of the table within the base.",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1603894884278,
      "ModificationTimeUnixTimeInMs": 1603894884278
    }
  ],
  "Rules": [],
  "IsConnectorRulesSupported": true,
  "IsSystem": false,
  "PythonVersion": "None",
  "Id": 0,
  "CreationTimeUnixTimeInMs": 1603894884270,
  "ModificationTimeUnixTimeInMs": 1603894884272
}