{
  "IsEnabled": true,
  "IsCustom": false,
  "Integration": "Google Sheets",
  "DocumentationLink": null,
  "Name": "Sheet Connector",
  "Description": "The connector pulls each row in a Google Sheet form",
  "Creator": "use-cases",
  "Script": "from SiemplifyConnectors import SiemplifyConnectorExecution\nfrom SiemplifyConnectorsDataModel import AlertInfo\nfrom SiemplifyUtils import output_handler, unix_now\nfrom random import randrange\nimport gspread\nimport json\n\nimport uuid\nimport sys\n\n\nCONNECTOR_NAME = \"Google Sheet Connector\"\n\n@output_handler\ndef main(is_test_run):\n    alerts = [] # The main output of each connector run\n\n    siemplify = SiemplifyConnectorExecution() # Siemplify main SDK wrapper\n    siemplify.script_name = CONNECTOR_NAME\n\n\n    credentials_json = siemplify.extract_connector_param(param_name=u'Credentials Json', is_mandatory=True)\n\n    sheet_id = siemplify.extract_connector_param(param_name=u'Sheet Id', is_mandatory=True)\n    worksheet_name = siemplify.extract_connector_param(param_name=u'Worksheet Name')\n    filter_alert_column_index = siemplify.extract_connector_param(param_name=u'Filter Alert Column Index')\n    filter_alert_column_value = siemplify.extract_connector_param(param_name=u'Filter Alert Column Value')\n\n    product = siemplify.extract_connector_param(param_name=u'Product')\n    alert_name_column_index = siemplify.extract_connector_param(param_name=u'Alert Name Column Index',is_mandatory=True)\n    alert_name_column_index_int = int(alert_name_column_index)\n\n    f = open(\"credentials.json\", \"w+\")\n    f.write(credentials_json)\n    f.close()\n\n\n    gc = gspread.service_account(filename='./credentials.json')\n    sh = gc.open_by_key(sheet_id)\n    \n    if(worksheet_name):\n        worksheet = sh.worksheet(worksheet_name)\n    else:\n        worksheet = sh.sheet1\n    headers = worksheet.row_values(1)\n    row_count = worksheet.row_count\n    for i in range(2, row_count):\n        row = worksheet.row_values(i)\n        if len(row) >2:\n            if filter_alert_column_index and filter_alert_column_value:\n                filter_alert_column_index_int = int(filter_alert_column_index)\n                if row[filter_alert_column_index_int].lower() != filter_alert_column_value.lower():\n                    continue\n            alert_info = AlertInfo()\n        \n            alert_id = str(uuid.uuid4())\n            alert_info.display_id = alert_id\n            alert_info.ticket_id = alert_id  \n            alert_info.name = product\n\n            if alert_name_column_index_int != -1:\n                alert_info.name = product + ' <' + row[alert_name_column_index_int] + '>'\n            alert_info.rule_generator = product  \n            alert_info.start_time = unix_now()  \n            alert_info.end_time = unix_now() \n            alert_info.priority = 60  \n            alert_info.device_vendor = CONNECTOR_NAME  \n            alert_info.device_product = product  \n            alert_info.environment = siemplify.context.connector_info.environment # This field, gets the Environment of the specific connector execution.\n            print(alert_info.name)\n            event = {}\n                \n            index = 0\n            event[\"StartTime\"] = unix_now() \n            event[\"EndTime\"] = unix_now() \n            event[\"name\"] = product\n            event[\"device_product\"] = product\n\n            for cell in row:\n                event[headers[index]] = cell\n                index = index + 1\n            #print(event)\n            alert_info.events.append(event)\n            alerts.append(alert_info)    #print(dd)\n    \n    print(\"{0} alert were successfully generated.\".format(len(alerts)))\n    siemplify.return_package(alerts)\n\n\nif __name__ == \"__main__\":\n    is_test_run = not (len(sys.argv) < 2 or sys.argv[1] == 'True')\n    main(is_test_run)",
  "Version": 28,
  "MappingRules": [],
  "ProductToVisualFamilyRecords": [],
  "SimulationUseCases": {
    "CasesForUseCase": [],
    "UseCaseName": null
  },
  "Parameters": [
    {
      "ConnectorDefinitionId": 150,
      "IsMandatory": true,
      "DefaultValue": "0",
      "Name": "Alert Name Column Index",
      "Type": 1,
      "Mode": 2,
      "Description": "Alert Name Column Index",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1620130060252,
      "ModificationTimeUnixTimeInMs": 1620130060252
    },
    {
      "ConnectorDefinitionId": 150,
      "IsMandatory": true,
      "DefaultValue": "{}",
      "Name": "Credentials Json",
      "Type": 2,
      "Mode": 2,
      "Description": "Credentials Json",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1620130060252,
      "ModificationTimeUnixTimeInMs": 1620130060252
    },
    {
      "ConnectorDefinitionId": 150,
      "IsMandatory": true,
      "DefaultValue": "device_product",
      "Name": "DeviceProductField",
      "Type": 2,
      "Mode": 0,
      "Description": "The field name used to determine the device product",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1620130060252,
      "ModificationTimeUnixTimeInMs": 1620130060252
    },
    {
      "ConnectorDefinitionId": 150,
      "IsMandatory": true,
      "DefaultValue": "device_event",
      "Name": "EventClassId",
      "Type": 2,
      "Mode": 0,
      "Description": "The field name used to determine the event name (sub-type)",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1620130060252,
      "ModificationTimeUnixTimeInMs": 1620130060252
    },
    {
      "ConnectorDefinitionId": 150,
      "IsMandatory": false,
      "DefaultValue": null,
      "Name": "Filter Alert Column Index",
      "Type": 1,
      "Mode": 2,
      "Description": "Filter Alert Column Index",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1620130060252,
      "ModificationTimeUnixTimeInMs": 1620130060252
    },
    {
      "ConnectorDefinitionId": 150,
      "IsMandatory": false,
      "DefaultValue": null,
      "Name": "Filter Alert Column Value",
      "Type": 2,
      "Mode": 2,
      "Description": "Filter Alert Column Value",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1620130060252,
      "ModificationTimeUnixTimeInMs": 1620130060252
    },
    {
      "ConnectorDefinitionId": 150,
      "IsMandatory": true,
      "DefaultValue": "<Sheet>",
      "Name": "Product",
      "Type": 2,
      "Mode": 2,
      "Description": "Product",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1620130060252,
      "ModificationTimeUnixTimeInMs": 1620130060252
    },
    {
      "ConnectorDefinitionId": 150,
      "IsMandatory": true,
      "DefaultValue": "30",
      "Name": "PythonProcessTimeout",
      "Type": 2,
      "Mode": 0,
      "Description": "The timeout limit (in seconds) for the python process running current script",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1620130060252,
      "ModificationTimeUnixTimeInMs": 1620130060252
    },
    {
      "ConnectorDefinitionId": 150,
      "IsMandatory": true,
      "DefaultValue": "<Sheet Id>",
      "Name": "Sheet Id",
      "Type": 2,
      "Mode": 2,
      "Description": "Sheet Id",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1620130060252,
      "ModificationTimeUnixTimeInMs": 1620130060252
    },
    {
      "ConnectorDefinitionId": 150,
      "IsMandatory": true,
      "DefaultValue": "Sheet1",
      "Name": "Worksheet Name",
      "Type": 2,
      "Mode": 2,
      "Description": "Worksheet Name",
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1620130060252,
      "ModificationTimeUnixTimeInMs": 1620130060252
    }
  ],
  "Rules": [],
  "IsConnectorRulesSupported": true,
  "IsSystem": false,
  "PythonVersion": "None",
  "Id": 0,
  "CreationTimeUnixTimeInMs": 1620130060208,
  "ModificationTimeUnixTimeInMs": 1620130060225
}