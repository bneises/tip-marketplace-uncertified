{
	"Name": "Enrich IP",
	"Description": "This action performs real-time lookups to instantly determine how risky a user, click, or transaction is based on an IP address and optional device information. In addition to analyzing if the IP address is a proxy or VPN, the API returns over 20 relevant data points such as: Geo location data, ISP, Connection type, Device details, Recent reputation activity, Overall fraud score, Status as a proxy, VPN, or TOR connection, Abuse Velocity, Other similar data points to classify reputation and risk.",
	"Script": "from SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import output_handler\nfrom IPQSManager import IPQSManager, PROVIDER\nfrom SiemplifyDataModel import EntityTypes\n\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    data_json = {}\n    api_key = siemplify.extract_configuration_param(PROVIDER,\"API Key\")\n    strictness = int(siemplify.extract_action_param(param_name=\"Strictness\", print_value=True))\n    user_agent = siemplify.extract_action_param(param_name=\"User Agent\", print_value=True)\n    user_language = siemplify.extract_action_param(param_name=\"User Language\", print_value=True)\n    fast = siemplify.extract_action_param(param_name=\"Fast\", print_value=True)\n    mobile = siemplify.extract_action_param(param_name=\"Mobile\", print_value=True)\n    allow_public_access_points = siemplify.extract_action_param(param_name=\"Allow Public Access Points\", print_value=True)\n    lighter_penalties = siemplify.extract_action_param(param_name=\"Lighter Penalties\", print_value=True)\n    data_json['strictness'] = strictness\n    if user_agent != \"\":\n        data_json['user_agent'] = user_agent\n    if user_language != \"\":\n        data_json['user_language'] = user_language\n    if fast:\n        data_json['fast'] = 'true'\n    if mobile:\n         data_json['mobile'] = 'true'\n    if allow_public_access_points:\n        data_json['allow_public_access_points'] = 'true'\n    if lighter_penalties:\n        data_json['lighter_penalties'] = 'true'\n        \n    ipqs_manager = IPQSManager(siemplify, api_key, data_json)\n    ipqs_manager.enrich([EntityTypes.ADDRESS])\n\nif __name__ == \"__main__\":\n    main()\n",
	"IntegrationIdentifier": "IPQS Fraud and Risk Scoring",
	"ScriptResultName": "ScriptResult",
	"DynamicResultsMetadata": [{
		"ResultName": "JsonResult",
		"ResultExample": "{}",
		"ShowResult": true
	}],
	"Creator": "IPQS",
	"IsEnabled": true,
	"IsCustom": false,
	"IsSystem": false,
	"Version": 11.0,
	"TimeoutSeconds": 300,
	"IsAsync": null,
	"AsyncPollingIntervalInSeconds": 3600,
	"TotalIntervalTimeoutForAsyncInSeconds": 86400,
	"Parameters": [{
		"CustomActionId": 0,
		"IsMandatory": false,
		"DefaultValue": "",
		"Description": "You can optionally provide us with the users language header. This allows us to evaluate the risk of the user as judged in the \"fraud_score\".",
		"Name": "User Language",
		"Value": "",
		"Type": 0,
		"OptionalValues": null,
		"OptionalValuesJson": null
	}, {
		"CustomActionId": 0,
		"IsMandatory": false,
		"DefaultValue": "false",
		"Description": "When this parameter is enabled our API will not perform certain forensic checks that take longer to process.",
		"Name": "Fast",
		"Value": "false",
		"Type": 1,
		"OptionalValues": null,
		"OptionalValuesJson": null
	}, {
		"CustomActionId": 0,
		"IsMandatory": false,
		"DefaultValue": "false",
		"Description": "You can optionally specify that this lookup should be treated as a mobile device. ",
		"Name": "Mobile",
		"Value": "false",
		"Type": 1,
		"OptionalValues": null,
		"OptionalValuesJson": null
	}, {
		"CustomActionId": 0,
		"IsMandatory": false,
		"DefaultValue": "false",
		"Description": "Bypasses certain checks for IP addresses from education and research institutions, schools, and some corporate connections.",
		"Name": "Allow Public Access Points",
		"Value": "false",
		"Type": 1,
		"OptionalValues": null,
		"OptionalValuesJson": null
	}, {
		"CustomActionId": 0,
		"IsMandatory": false,
		"DefaultValue": "false",
		"Description": "Skip some blacklists which can cause false-positives for sensitive audiences.",
		"Name": "Lighter Penalties",
		"Value": "false",
		"Type": 1,
		"OptionalValues": null,
		"OptionalValuesJson": null
	}, {
		"CustomActionId": 0,
		"IsMandatory": true,
		"DefaultValue": "0",
		"Description": "How in depth (strict) do you want this query to be? Higher values take longer to process and may provide a higher false-positive rate.",
		"Name": "Strictness",
		"Value": "0",
		"Type": 15,
		"OptionalValues": ["0", "1", "2"],
		"OptionalValuesJson": "[\"0\",\"1\",\"2\"]"
	}, {
		"CustomActionId": 0,
		"IsMandatory": false,
		"DefaultValue": "",
		"Description": "You can optionally provide us with the user agent string (browser). This allows to see if the user is a bot or running an invalid browser.",
		"Name": "User Agent",
		"Value": "",
		"Type": 0,
		"OptionalValues": null,
		"OptionalValuesJson": null
	}],
	"DefaultResultValue": "",
	"PythonVersion": "None",
	"SimulationData": {
		"Entities": null
	},
	"SimulationDataJson": null
}