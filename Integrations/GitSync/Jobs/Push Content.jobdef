{
  "RunIntervalInSeconds": 900,
  "Parameters": [
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1625475170427,
      "ModificationTimeUnixTimeInMs": 1625475170427,
      "DefaultValue": "",
      "Description": "Commit message",
      "IsMandatory": true,
      "Name": "Commit",
      "Type": 2
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1625475170427,
      "ModificationTimeUnixTimeInMs": 1625475170427,
      "DefaultValue": null,
      "Description": "Optional parameter to override the one found in the integration instance",
      "IsMandatory": false,
      "Name": "Repo URL",
      "Type": 2
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1625475170427,
      "ModificationTimeUnixTimeInMs": 1625475170427,
      "DefaultValue": null,
      "Description": "Optional parameter to override the one found in the integration instance",
      "IsMandatory": false,
      "Name": "Branch",
      "Type": 2
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1625690501040,
      "ModificationTimeUnixTimeInMs": 1625690501040,
      "DefaultValue": "false",
      "Description": "WARNING! Never commit passwords to git repositories. Used for testing purposes",
      "IsMandatory": true,
      "Name": "Commit Passwords",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all integrations",
      "IsMandatory": true,
      "Name": "Integrations",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all playbooks",
      "IsMandatory": true,
      "Name": "Playbooks",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all defined jobs",
      "IsMandatory": true,
      "Name": "Jobs",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all defined connectors",
      "IsMandatory": true,
      "Name": "Connectors",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all integration instances",
      "IsMandatory": true,
      "Name": "Integration Instances",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all visual families",
      "IsMandatory": true,
      "Name": "Visual Families",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all mappings",
      "IsMandatory": true,
      "Name": "Mappings",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all environments",
      "IsMandatory": true,
      "Name": "Environments",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all dynamic parameters",
      "IsMandatory": true,
      "Name": "Dynamic Parameters",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push logo settings",
      "IsMandatory": true,
      "Name": "Logo",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all case tags",
      "IsMandatory": true,
      "Name": "Case Tags",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push Case stages",
      "IsMandatory": true,
      "Name": "Case Stages",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push case title settings",
      "IsMandatory": true,
      "Name": "Case Title Settings",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all case close reasons",
      "IsMandatory": true,
      "Name": "Case Close Reasons",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all networks",
      "IsMandatory": true,
      "Name": "Networks",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "push all domain records",
      "IsMandatory": true,
      "Name": "Domains",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all custom lists",
      "IsMandatory": true,
      "Name": "Custom Lists",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all email templates",
      "IsMandatory": true,
      "Name": "Email Templates",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all blocklist records",
      "IsMandatory": true,
      "Name": "Blacklists",
      "Type": 0
    },
    {
      "Id": 0,
      "JobDefinitionId": 0,
      "CreationTimeUnixTimeInMs": 1628166627774,
      "ModificationTimeUnixTimeInMs": 1628166627774,
      "DefaultValue": "true",
      "Description": "Push all SLA Records",
      "IsMandatory": true,
      "Name": "SLA Records",
      "Type": 0
    }
  ],
  "Integration": "GitSync",
  "Name": "Push Content",
  "Description": "Push all content of this platform to git",
  "CreationTimeUnixTimeInMs": 1625475170411,
  "ModificationTimeUnixTimeInMs": 1625475170418,
  "Script": "import json\nfrom io import BytesIO\n\nfrom GitSyncManager import GitSyncManager\nfrom SiemplifyJob import SiemplifyJob\nfrom SiemplifyUtils import output_handler\nfrom definitions import Integration, Environment, File, VisualFamily, Mapping, Playbook, Connector\n\nSCRIPT_NAME = \"Push Environment\"\n\n\n@output_handler\ndef main():\n    siemplify = SiemplifyJob()\n    siemplify.script_name = SCRIPT_NAME\n\n    commit_msg = siemplify.extract_job_param(\"Commit\")\n\n    try:\n        gitsync = GitSyncManager.from_siemplify_object(siemplify)\n        env = Environment()\n        # Integrations\n        for integration in gitsync.api.get_ide_cards():\n            integrationObj = Integration(integration, BytesIO(gitsync.api.export_package(integration[\"identifier\"])))\n            try:\n                gitsync.push_integration(integrationObj)\n            except Exception as e:\n                siemplify.LOGGER.info(f\"Couldn't upload {integrationObj.identifier}. ERROR: {e}\")\n\n        # Playbooks\n        for playbook in gitsync.api.get_playbooks():\n            playbook = gitsync.api.get_playbook(playbook[\"identifier\"])\n            gitsync.push_playbook(Playbook(playbook))\n\n        # Jobs\n        for job in gitsync.api.get_jobs():\n            env.jobs.append(File(f\"{job['name']}.json\", json.dumps(job, indent=4)))\n\n        # Connectors\n        for connector in gitsync.api.get_connectors():\n            gitsync.push_connector(Connector(connector))\n\n        # Integration Instances\n        for environment in gitsync.api.get_environment_names() + [\"*\"]:\n            for instance in gitsync.api.get_integrations_instances(environment):\n                settings = gitsync.api.get_integration_instance_settings(instance['identifier'])\n                try:\n                    secrets = siemplify.get_configuration(instance['identifier'])\n                except:\n                    secrets = False\n                for prop in settings:\n                    if secrets and prop['propertyType'] == 3:\n                        try:\n                            prop['value'] = secrets[prop['propertyName']]\n                        except KeyError:\n                            # The integration was updated with new parameters but they weren't configured\n                            pass\n                env.settings.integrationInstances.append({\n                    \"environment\": environment,\n                    \"integrationIdentifier\": instance['integrationIdentifier'],\n                    \"settings\": {\n                        \"instanceDescription\": instance['instanceDescription'],\n                        \"instanceName\": instance['instanceName'],\n                        \"settings\": settings\n                    }\n                })\n\n        # Ontology - Visual Families\n        for visualFamily in gitsync.api.get_custom_families():\n            gitsync.push_visual_family(VisualFamily(gitsync.api.get_custom_family(visualFamily['id'])))\n\n        # Ontology - Mappings\n        allRecords = gitsync.api.get_ontology_records()\n        records_integrations = set([x[\"source\"] for x in allRecords])\n        for integration in records_integrations:\n            if integration:\n                records = [x for x in allRecords if x[\"source\"] == integration]\n                if not records:\n                    continue\n                rules = []\n                for record in records:\n                    record[\"exampleEventFields\"] = []  # remove event assets\n                    rule = gitsync.api.get_mapping_rules(record[\"source\"], record[\"product\"], record[\"eventName\"])\n                    for r in rule['familyFields'] + rule['systemFields']:\n                        # remove bad rules with no source\n                        if r['mappingRule']['source'] and r['mappingRule']['source'].lower() == integration.lower():\n                            rules.append(rule)\n                            break\n\n                gitsync.push_mapping(Mapping(integration, records, rules))\n\n        # Other settings\n        env.settings.environments = gitsync.api.get_environments()\n        env.settings.dynamicParameters = gitsync.api.get_env_dynamic_parameters()\n        env.settings.logo = gitsync.api.get_logo()\n\n        env.settings.tags = gitsync.api.get_case_tags()\n        env.settings.stages = gitsync.api.get_case_stages()\n        env.settings.caseTitles = gitsync.api.get_case_title_settings()\n        env.settings.caseCloseCauses = gitsync.api.get_close_reasons()\n\n        env.settings.networks = gitsync.api.get_networks()\n        env.settings.domains = gitsync.api.get_domains()\n        env.settings.customLists = gitsync.api.get_custom_lists()\n        env.settings.emailTemplates = gitsync.api.get_email_templates()\n        env.settings.blacklists = gitsync.api.get_blacklists()\n        env.settings.slaDefinitions = gitsync.api.get_sla_records()\n\n        gitsync.push_environment(env)\n        gitsync.commit_and_push(commit_msg)\n\n    except Exception as e:\n        siemplify.LOGGER.error(\"General error performing Job {}\".format(SCRIPT_NAME))\n        siemplify.LOGGER.exception(e)\n        raise\n\n    siemplify.end_script()\n\n\nif __name__ == \"__main__\":\n    main()\n",
  "Creator": "Admin",
  "IsEnabled": true,
  "IsCustom": false,
  "IsSystem": false,
  "Version": 1,
  "PythonVersion": "None",
  "Id": 0
}